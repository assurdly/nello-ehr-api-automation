{"uid":"f62ad20ca936dfc1","name":"Update Result-Notes-Required","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation/Update Result#Update Result-Notes-Required","historyId":"1fff80a879f6d47606c1a1c674059a64:0d31515477a5c0b947215b9cc328ebab","time":{"start":1742492339830,"stop":1742492340015,"duration":185},"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742492340012,"stop":1742492340012,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:561)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is failed","time":{"start":1742492340012,"stop":1742492340012,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:561)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error is an array","time":{"start":1742492340013,"stop":1742492340013,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:561)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"An error message is displayed","time":{"start":1742492340013,"stop":1742492340013,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:561)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dd2d0f7acb1b1360","name":"TestScript","source":"dd2d0f7acb1b1360.txt","type":"text/plain","size":487},{"uid":"fb9e8484c28d7d01","name":"Request Headers","source":"fb9e8484c28d7d01.json","type":"application/json","size":395},{"uid":"2316bec9528f2b0d","name":"Request Body","source":"2316bec9528f2b0d.txt","type":"text/plain","size":329},{"uid":"7a97a04141392c1c","name":"Response Headers","source":"7a97a04141392c1c.json","type":"application/json","size":354},{"uid":"6d7953de94e8f496","name":"Response Body","source":"6d7953de94e8f496.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az791-151"},{"name":"thread","value":"pid-2380-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation > Update Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"e1bc22a52727b8d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/249//#testresult/e1bc22a52727b8d","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array, An error message is displayed","time":{"start":1742492107362,"stop":1742492107480,"duration":118}},{"uid":"ee8f6638affde171","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/248//#testresult/ee8f6638affde171","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array, An error message is displayed","time":{"start":1742491927043,"stop":1742491927164,"duration":121}},{"uid":"4f4b35f657aaaf15","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/247//#testresult/4f4b35f657aaaf15","status":"failed","statusDetails":"Response code is 200, Status is success, Message is correct","time":{"start":1742491780164,"stop":1742491780350,"duration":186}}]},"tags":[]},"source":"f62ad20ca936dfc1.json","parameterValues":["PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68","401"]}