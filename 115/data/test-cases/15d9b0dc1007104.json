{"uid":"15d9b0dc1007104","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1741285036476,"stop":1741285036595,"duration":119},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1741285036592,"stop":1741285036592,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1741285036593,"stop":1741285036593,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1741285036593,"stop":1741285036593,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1741285036593,"stop":1741285036593,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1741285036594,"stop":1741285036594,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"654b25fbed76b55","name":"TestScript","source":"654b25fbed76b55.txt","type":"text/plain","size":1231},{"uid":"25ec9bb536bc54fc","name":"Request Headers","source":"25ec9bb536bc54fc.json","type":"application/json","size":397},{"uid":"45588a13c438ecf3","name":"Request Body","source":"45588a13c438ecf3.txt","type":"text/plain","size":686},{"uid":"356565196a92ee20","name":"Response Headers","source":"356565196a92ee20.json","type":"application/json","size":354},{"uid":"88b5691998bfa3a4","name":"Response Body","source":"88b5691998bfa3a4.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1718-750"},{"name":"thread","value":"pid-2387-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":94,"unknown":0,"total":116},"items":[{"uid":"621799f7d1bc5876","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/114//#testresult/621799f7d1bc5876","status":"passed","time":{"start":1741280388256,"stop":1741280388391,"duration":135}},{"uid":"ef9b14017ee27a43","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/113//#testresult/ef9b14017ee27a43","status":"passed","time":{"start":1741280196998,"stop":1741280197131,"duration":133}},{"uid":"dc9881d639adb8bb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/112//#testresult/dc9881d639adb8bb","status":"passed","time":{"start":1741280008348,"stop":1741280008495,"duration":147}},{"uid":"c8e8685c43a3c525","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/111//#testresult/c8e8685c43a3c525","status":"passed","time":{"start":1741279022851,"stop":1741279022979,"duration":128}},{"uid":"2b537098f1c013ca","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/110//#testresult/2b537098f1c013ca","status":"passed","time":{"start":1741278822573,"stop":1741278822711,"duration":138}},{"uid":"8b9161daef116c2d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/109//#testresult/8b9161daef116c2d","status":"passed","time":{"start":1741278626137,"stop":1741278626266,"duration":129}},{"uid":"82e59447beeafa8c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/108//#testresult/82e59447beeafa8c","status":"passed","time":{"start":1741278468080,"stop":1741278468265,"duration":185}},{"uid":"a9e5dd87ebeb6f45","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/107//#testresult/a9e5dd87ebeb6f45","status":"passed","time":{"start":1741278254557,"stop":1741278254703,"duration":146}},{"uid":"7ba5a65d18faf6d7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/106//#testresult/7ba5a65d18faf6d7","status":"passed","time":{"start":1741278055959,"stop":1741278056088,"duration":129}},{"uid":"dc17879f78fe6759","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/105//#testresult/dc17879f78fe6759","status":"passed","time":{"start":1741277805513,"stop":1741277805644,"duration":131}},{"uid":"c40f42ed0b8e9b03","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/104//#testresult/c40f42ed0b8e9b03","status":"passed","time":{"start":1741277351224,"stop":1741277351422,"duration":198}},{"uid":"f49b24e7e1b8418e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/103//#testresult/f49b24e7e1b8418e","status":"passed","time":{"start":1741277129590,"stop":1741277129744,"duration":154}},{"uid":"7d3cca4a7889f163","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/102//#testresult/7d3cca4a7889f163","status":"passed","time":{"start":1741276727519,"stop":1741276727649,"duration":130}},{"uid":"f051095e941f9ae9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/101//#testresult/f051095e941f9ae9","status":"passed","time":{"start":1741276531328,"stop":1741276531454,"duration":126}},{"uid":"98e8b3e3102ee9f0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/100//#testresult/98e8b3e3102ee9f0","status":"passed","time":{"start":1741276328131,"stop":1741276328258,"duration":127}},{"uid":"3af7c37b27d75eec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/99//#testresult/3af7c37b27d75eec","status":"passed","time":{"start":1741276146067,"stop":1741276146215,"duration":148}},{"uid":"5db76e0dfef07ecc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/98//#testresult/5db76e0dfef07ecc","status":"passed","time":{"start":1741275957600,"stop":1741275957751,"duration":151}},{"uid":"e0f9a539ddfd7763","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/97//#testresult/e0f9a539ddfd7763","status":"passed","time":{"start":1741275780777,"stop":1741275780958,"duration":181}},{"uid":"78f302785101ea12","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/96//#testresult/78f302785101ea12","status":"passed","time":{"start":1741275557302,"stop":1741275557451,"duration":149}},{"uid":"ea43aebc8cf408b2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/95//#testresult/ea43aebc8cf408b2","status":"passed","time":{"start":1741275385835,"stop":1741275386033,"duration":198}}]},"tags":[]},"source":"15d9b0dc1007104.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}