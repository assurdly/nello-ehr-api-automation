{"uid":"8f6c341dfffd01a","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1742494509620,"stop":1742494509743,"duration":123},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1742494509740,"stop":1742494509740,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742494509740,"stop":1742494509740,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1742494509741,"stop":1742494509741,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1742494509741,"stop":1742494509741,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1742494509742,"stop":1742494509742,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e515d633c45d6d2b","name":"TestScript","source":"e515d633c45d6d2b.txt","type":"text/plain","size":1231},{"uid":"4465432ecf6e5674","name":"Request Headers","source":"4465432ecf6e5674.json","type":"application/json","size":397},{"uid":"2a692a461a2d9ffb","name":"Request Body","source":"2a692a461a2d9ffb.txt","type":"text/plain","size":686},{"uid":"3350a93e68601c7b","name":"Response Headers","source":"3350a93e68601c7b.json","type":"application/json","size":354},{"uid":"e9816521e852aaf1","name":"Response Body","source":"e9816521e852aaf1.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1074-614"},{"name":"thread","value":"pid-2386-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":233,"unknown":0,"total":261},"items":[{"uid":"164f66baf6963bf4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/164f66baf6963bf4","status":"passed","time":{"start":1742494161066,"stop":1742494161199,"duration":133}},{"uid":"65c94bee207922df","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/259//#testresult/65c94bee207922df","status":"passed","time":{"start":1742493962804,"stop":1742493962935,"duration":131}},{"uid":"4842aaaaed906aa7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/258//#testresult/4842aaaaed906aa7","status":"passed","time":{"start":1742493590926,"stop":1742493591055,"duration":129}},{"uid":"ac68295fe18e715d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/256//#testresult/ac68295fe18e715d","status":"passed","time":{"start":1742493421867,"stop":1742493422184,"duration":317}},{"uid":"5e90180c62610d6e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/255//#testresult/5e90180c62610d6e","status":"passed","time":{"start":1742493212764,"stop":1742493212896,"duration":132}},{"uid":"67bf0496f899d3ca","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/254//#testresult/67bf0496f899d3ca","status":"passed","time":{"start":1742493021720,"stop":1742493022978,"duration":1258}},{"uid":"818e7ac30e8fa9f0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/253//#testresult/818e7ac30e8fa9f0","status":"passed","time":{"start":1742492842526,"stop":1742492842672,"duration":146}},{"uid":"54709ed3c33fdb5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/252//#testresult/54709ed3c33fdb5","status":"passed","time":{"start":1742492650073,"stop":1742492650204,"duration":131}},{"uid":"3918a42b788662c4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/251//#testresult/3918a42b788662c4","status":"passed","time":{"start":1742492300478,"stop":1742492300677,"duration":199}},{"uid":"41bba716db22fdbc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/250//#testresult/41bba716db22fdbc","status":"passed","time":{"start":1742492107812,"stop":1742492108005,"duration":193}},{"uid":"154826b0e939703c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/249//#testresult/154826b0e939703c","status":"passed","time":{"start":1742491904485,"stop":1742491904610,"duration":125}},{"uid":"457725aa193978b6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/248//#testresult/457725aa193978b6","status":"passed","time":{"start":1742491716221,"stop":1742491716352,"duration":131}},{"uid":"fb98c9e40e0f3540","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/247//#testresult/fb98c9e40e0f3540","status":"passed","time":{"start":1742491547255,"stop":1742491547455,"duration":200}},{"uid":"24d7badd876a0ea9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/246//#testresult/24d7badd876a0ea9","status":"passed","time":{"start":1742491333430,"stop":1742491333562,"duration":132}},{"uid":"ae85203c7fd33fb4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/245//#testresult/ae85203c7fd33fb4","status":"passed","time":{"start":1742490976796,"stop":1742490976966,"duration":170}},{"uid":"7f2b26636685aaab","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/244//#testresult/7f2b26636685aaab","status":"passed","time":{"start":1742490769124,"stop":1742490769260,"duration":136}},{"uid":"501882a28e52c7da","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/243//#testresult/501882a28e52c7da","status":"passed","time":{"start":1742490594654,"stop":1742490594802,"duration":148}},{"uid":"e1792adec094dbb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/242//#testresult/e1792adec094dbb","status":"passed","time":{"start":1742490395061,"stop":1742490395193,"duration":132}},{"uid":"3d4933dc017cbc5d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/241//#testresult/3d4933dc017cbc5d","status":"passed","time":{"start":1742490236921,"stop":1742490237109,"duration":188}},{"uid":"3fbe0180ffcbd13e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/240//#testresult/3fbe0180ffcbd13e","status":"passed","time":{"start":1742490019190,"stop":1742490019322,"duration":132}}]},"tags":[]},"source":"8f6c341dfffd01a.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}