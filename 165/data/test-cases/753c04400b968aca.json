{"uid":"753c04400b968aca","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/RADIOLOGIST/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"c663c6820a2c791e5f96517d32292993:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742044466005,"stop":1742044466125,"duration":120},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742044466122,"stop":1742044466122,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:524)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742044466122,"stop":1742044466122,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:524)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounters list is not empty","time":{"start":1742044466123,"stop":1742044466123,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:524)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each encounter contains required fields","time":{"start":1742044466123,"stop":1742044466123,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:524)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742044466124,"stop":1742044466124,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:524)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cbfae2fdc96dfafd","name":"TestScript","source":"cbfae2fdc96dfafd.txt","type":"text/plain","size":1297},{"uid":"f45687244dbd4b1","name":"Request Headers","source":"f45687244dbd4b1.json","type":"application/json","size":326},{"uid":"2565471ca035765d","name":"Response Headers","source":"2565471ca035765d.json","type":"application/json","size":354},{"uid":"46dcb6ac98eec8d9","name":"Response Body","source":"46dcb6ac98eec8d9.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az2027-885"},{"name":"thread","value":"pid-2375-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":16},"items":[{"uid":"4ce5ee87fd809b94","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/4ce5ee87fd809b94","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742044300394,"stop":1742044300533,"duration":139}},{"uid":"4d721a612f34e71c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/4d721a612f34e71c","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742044094412,"stop":1742044094540,"duration":128}},{"uid":"9eae6045bbd523f0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/9eae6045bbd523f0","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742043906617,"stop":1742043906735,"duration":118}},{"uid":"9099bed88cfa3fec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/9099bed88cfa3fec","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742043773808,"stop":1742043773996,"duration":188}},{"uid":"6c30e4c329707aa3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/6c30e4c329707aa3","status":"passed","time":{"start":1742043580964,"stop":1742043582388,"duration":1424}},{"uid":"307c85789225a50f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/307c85789225a50f","status":"passed","time":{"start":1742043370123,"stop":1742043371565,"duration":1442}},{"uid":"54e6d9258975d68b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/54e6d9258975d68b","status":"passed","time":{"start":1742043187634,"stop":1742043189072,"duration":1438}},{"uid":"ebb7652bd9a30b80","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/ebb7652bd9a30b80","status":"passed","time":{"start":1742043002392,"stop":1742043003865,"duration":1473}},{"uid":"84d7e51c869a71e1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/84d7e51c869a71e1","status":"passed","time":{"start":1742042815682,"stop":1742042817085,"duration":1403}},{"uid":"bc15a58f34d0d077","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/bc15a58f34d0d077","status":"passed","time":{"start":1742042498436,"stop":1742042500058,"duration":1622}},{"uid":"1cbfe3537a910498","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/1cbfe3537a910498","status":"passed","time":{"start":1742042339687,"stop":1742042341246,"duration":1559}},{"uid":"ebc3da811e59c8af","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/ebc3da811e59c8af","status":"passed","time":{"start":1742042099514,"stop":1742042100994,"duration":1480}},{"uid":"3c4312fa84a1243","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/152//#testresult/3c4312fa84a1243","status":"passed","time":{"start":1742041917100,"stop":1742041918426,"duration":1326}},{"uid":"a8299739ee731a7b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/151//#testresult/a8299739ee731a7b","status":"passed","time":{"start":1742041750794,"stop":1742041752146,"duration":1352}},{"uid":"417dc192fe5b7b18","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/149//#testresult/417dc192fe5b7b18","status":"passed","time":{"start":1741957211412,"stop":1741957213185,"duration":1773}}]},"tags":[]},"source":"753c04400b968aca.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}