{"uid":"c0092e06953adadc","name":"Add result-TestName-Required","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation#Add result-TestName-Required","historyId":"6e5ca73a302b338050e3ee4f65a4d3ca:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742302025027,"stop":1742302025166,"duration":139},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742302025163,"stop":1742302025163,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:534)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742302025163,"stop":1742302025163,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:534)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742302025164,"stop":1742302025164,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:534)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1742302025164,"stop":1742302025164,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:534)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c88d97b8d02fd41c","name":"TestScript","source":"c88d97b8d02fd41c.txt","type":"text/plain","size":496},{"uid":"485b2ee177b5d881","name":"Request Headers","source":"485b2ee177b5d881.json","type":"application/json","size":395},{"uid":"ecef346f05e2839c","name":"Request Body","source":"ecef346f05e2839c.txt","type":"text/plain","size":418},{"uid":"31be6f5af680c5d4","name":"Response Headers","source":"31be6f5af680c5d4.json","type":"application/json","size":354},{"uid":"66f1016eb6e56a3e","name":"Response Body","source":"66f1016eb6e56a3e.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1042-459"},{"name":"thread","value":"pid-2463-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"297df77c3c350265","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/208//#testresult/297df77c3c350265","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301810146,"stop":1742301810284,"duration":138}},{"uid":"b6e28c1ccdff0364","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/207//#testresult/b6e28c1ccdff0364","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301661522,"stop":1742301661709,"duration":187}},{"uid":"faa208be58b12d9e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/206//#testresult/faa208be58b12d9e","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301440220,"stop":1742301440357,"duration":137}},{"uid":"4f464f77e227f35a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/205//#testresult/4f464f77e227f35a","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301275599,"stop":1742301275789,"duration":190}},{"uid":"4ea98c9d897ac1b7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/204//#testresult/4ea98c9d897ac1b7","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301033050,"stop":1742301033171,"duration":121}},{"uid":"9ad0f38617c711c7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/203//#testresult/9ad0f38617c711c7","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742300517630,"stop":1742300517819,"duration":189}},{"uid":"9172018ed4f390f4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/202//#testresult/9172018ed4f390f4","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742300317227,"stop":1742300317400,"duration":173}},{"uid":"5ce781749bfcb584","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/201//#testresult/5ce781749bfcb584","status":"failed","statusDetails":"Response status code is 200, Status is success, Result added successfully","time":{"start":1742300147845,"stop":1742300148030,"duration":185}}]},"tags":[]},"source":"c0092e06953adadc.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}