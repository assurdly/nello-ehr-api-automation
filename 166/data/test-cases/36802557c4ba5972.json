{"uid":"36802557c4ba5972","name":"Create-Service-NotPermitted","fullName":"FamaEMR - Test pack/RADIOLOGIST/Services/Service-Create#Create-Service-NotPermitted","historyId":"c1ad28145491e4c1a172bbfc70f635f0:92279dc9005c0a0bf524e8f312581659","time":{"start":1742044644392,"stop":1742044644514,"duration":122},"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 403 (Forbidden)","time":{"start":1742044644511,"stop":1742044644511,"duration":0},"status":"failed","statusMessage":"expected response to have status code 403 but got 401","statusTrace":"AssertionError: expected response to have status code 403 but got 401\n   at Object.eval sandbox-script.js:1:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742044644511,"stop":1742044644511,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'\n   at Object.eval sandbox-script.js:2:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"User object is present and has required fields","time":{"start":1742044644512,"stop":1742044644512,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'user'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'user'\n   at Object.eval sandbox-script.js:3:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"User role is not Admin or Receptionist","time":{"start":1742044644512,"stop":1742044644512,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'role')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'role')\n   at Object.eval sandbox-script.js:4:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"195a0695cbc1e9e","name":"TestScript","source":"195a0695cbc1e9e.txt","type":"text/plain","size":952},{"uid":"8db7c091ff66a63d","name":"Request Headers","source":"8db7c091ff66a63d.json","type":"application/json","size":395},{"uid":"8de1b5b17f52d126","name":"Request Body","source":"8de1b5b17f52d126.txt","type":"text/plain","size":137},{"uid":"34e2d50f200f923a","name":"Response Headers","source":"34e2d50f200f923a.json","type":"application/json","size":354},{"uid":"b8b638af65abb092","name":"Response Body","source":"b8b638af65abb092.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1721-587"},{"name":"thread","value":"pid-2416-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Services > Service-Create"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/service/addservice"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":17},"items":[{"uid":"739ff75a7a5ed5c0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/739ff75a7a5ed5c0","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742044466492,"stop":1742044466614,"duration":122}},{"uid":"e3ef7a560f92bc6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/e3ef7a560f92bc6","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742044300953,"stop":1742044301094,"duration":141}},{"uid":"1cbc6b2392878dd1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/1cbc6b2392878dd1","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742044094896,"stop":1742044095016,"duration":120}},{"uid":"ab21dde6f8a23f14","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/ab21dde6f8a23f14","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742043907092,"stop":1742043907211,"duration":119}},{"uid":"ee623caeb2ea96c2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/ee623caeb2ea96c2","status":"passed","time":{"start":1742043774560,"stop":1742043774746,"duration":186}},{"uid":"d3ef7b204db3f970","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/d3ef7b204db3f970","status":"passed","time":{"start":1742043582885,"stop":1742043583051,"duration":166}},{"uid":"d7784b488466740","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/d7784b488466740","status":"passed","time":{"start":1742043371933,"stop":1742043372054,"duration":121}},{"uid":"c924e40525c06478","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/c924e40525c06478","status":"passed","time":{"start":1742043189442,"stop":1742043189564,"duration":122}},{"uid":"cc2040616aa7f234","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/cc2040616aa7f234","status":"passed","time":{"start":1742043004233,"stop":1742043004353,"duration":120}},{"uid":"43f543a785a839bc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/43f543a785a839bc","status":"passed","time":{"start":1742042817449,"stop":1742042817569,"duration":120}},{"uid":"335e852c1d83ac4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/335e852c1d83ac4","status":"passed","time":{"start":1742042500623,"stop":1742042500809,"duration":186}},{"uid":"9cae537fdf5b2361","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/9cae537fdf5b2361","status":"passed","time":{"start":1742042341664,"stop":1742042341801,"duration":137}},{"uid":"5d96fc4a6caaed65","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/5d96fc4a6caaed65","status":"passed","time":{"start":1742042101416,"stop":1742042101560,"duration":144}},{"uid":"1146fb8032c86cc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/152//#testresult/1146fb8032c86cc","status":"passed","time":{"start":1742041918796,"stop":1742041918918,"duration":122}},{"uid":"f9bcb97e6ba45fdb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/151//#testresult/f9bcb97e6ba45fdb","status":"passed","time":{"start":1742041752514,"stop":1742041752638,"duration":124}},{"uid":"cc4b100545b333da","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/149//#testresult/cc4b100545b333da","status":"passed","time":{"start":1741957213749,"stop":1741957213937,"duration":188}}]},"tags":[]},"source":"36802557c4ba5972.json","parameterValues":["POST - https://testback.famacare.com/api/service/addservice","401"]}