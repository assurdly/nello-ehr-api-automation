{"uid":"ae6f7d99b933060d","name":"Get Unique Encounter (uuid)","fullName":"FamaEMR - Test pack/RECEPTIONIST/Encounter/Unique Encounter (uuid)#Get Unique Encounter (uuid)","historyId":"9e38f43ae81c1326f77a014063cc47e7:165a0947623dd8e57c12c84493d10bd2","time":{"start":1742044328642,"stop":1742044328797,"duration":155},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounter object exists, Encounter contains required fields, Vitals contain valid data, Payment policy is valid","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounter object exists, Encounter contains required fields, Vitals contain valid data, Payment policy is valid","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Response status code is 200","time":{"start":1742044328792,"stop":1742044328792,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 400","statusTrace":"AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742044328792,"stop":1742044328792,"duration":0},"status":"failed","statusMessage":"expected 'failed' to deeply equal 'success'","statusTrace":"AssertionError: expected 'failed' to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounter object exists","time":{"start":1742044328794,"stop":1742044328794,"duration":0},"status":"failed","statusMessage":"expected { status: 'failed', …(1) } to have property 'encounter'","statusTrace":"AssertionError: expected { status: 'failed', …(1) } to have property 'encounter'\n   at Object.eval sandbox-script.js:3:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounter contains required fields","time":{"start":1742044328794,"stop":1742044328794,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Vitals contain valid data","time":{"start":1742044328795,"stop":1742044328795,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'vitals')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'vitals')\n   at Object.eval sandbox-script.js:5:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Payment policy is valid","time":{"start":1742044328795,"stop":1742044328796,"duration":1},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'payment_policy')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'payment_policy')\n   at Object.eval sandbox-script.js:6:267)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d62c891d3ebfd0e6","name":"TestScript","source":"d62c891d3ebfd0e6.txt","type":"text/plain","size":1565},{"uid":"c757a274e64f0ca7","name":"Request Headers","source":"c757a274e64f0ca7.json","type":"application/json","size":513},{"uid":"ae08df27bd01a63e","name":"Response Headers","source":"ae08df27bd01a63e.json","type":"application/json","size":354},{"uid":"1013a06c67670a2a","name":"Response Body","source":"1013a06c67670a2a.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1721-587"},{"name":"thread","value":"pid-2416-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Encounter > Unique Encounter (uuid)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch/56C36693"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ae6f7d99b933060d.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch/56C36693","400"]}