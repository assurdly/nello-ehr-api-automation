{"uid":"213321d2558a4f8c","name":"Fetch Service by type","fullName":"FamaEMR - Test pack/RADIOLOGIST/Services/fetch all services by type#Fetch Service by type","historyId":"c64997a0f7f44b935072e5261b096205:d4a075a499cd7ac9962624aed6da847f","time":{"start":1742044645000,"stop":1742044645123,"duration":123},"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status is 200","time":{"start":1742044645121,"stop":1742044645121,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:533)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains services","time":{"start":1742044645121,"stop":1742044645121,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:533)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Service details are valid","time":{"start":1742044645122,"stop":1742044645122,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:533)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7667499d8d7d9524","name":"TestScript","source":"7667499d8d7d9524.txt","type":"text/plain","size":1108},{"uid":"7da7e4a00f0e1e95","name":"Request Headers","source":"7da7e4a00f0e1e95.json","type":"application/json","size":326},{"uid":"92cc59df8ecdeef5","name":"Response Headers","source":"92cc59df8ecdeef5.json","type":"application/json","size":354},{"uid":"aa9a138103a6b02","name":"Response Body","source":"aa9a138103a6b02.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1721-587"},{"name":"thread","value":"pid-2416-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Services > fetch all services by type"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/service/fetch/Imaging%20Investigation"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":17},"items":[{"uid":"649ddcb5ff058031","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/649ddcb5ff058031","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1742044467101,"stop":1742044467221,"duration":120}},{"uid":"4181b9d80f8e4601","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/4181b9d80f8e4601","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1742044301655,"stop":1742044301791,"duration":136}},{"uid":"82858230891284a1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/82858230891284a1","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1742044095491,"stop":1742044095607,"duration":116}},{"uid":"27092e8ebc1c2665","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/27092e8ebc1c2665","status":"passed","time":{"start":1742043907685,"stop":1742043907836,"duration":151}},{"uid":"80fdcd40bc736bb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/80fdcd40bc736bb","status":"passed","time":{"start":1742043776393,"stop":1742043776612,"duration":219}},{"uid":"e52dcf6b369e0d5f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/e52dcf6b369e0d5f","status":"passed","time":{"start":1742043583891,"stop":1742043584088,"duration":197}},{"uid":"f2e08aaf23ab509","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/f2e08aaf23ab509","status":"passed","time":{"start":1742043372732,"stop":1742043372888,"duration":156}},{"uid":"2cb28b59e23899d2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/2cb28b59e23899d2","status":"passed","time":{"start":1742043190219,"stop":1742043190376,"duration":157}},{"uid":"95429a3b49d8cf7c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/95429a3b49d8cf7c","status":"passed","time":{"start":1742043005016,"stop":1742043005170,"duration":154}},{"uid":"2312ddb22fc7fff6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/2312ddb22fc7fff6","status":"passed","time":{"start":1742042818223,"stop":1742042818378,"duration":155}},{"uid":"c9a021acab4d7b66","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/c9a021acab4d7b66","status":"passed","time":{"start":1742042501683,"stop":1742042501903,"duration":220}},{"uid":"4f7fd34597c45763","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/4f7fd34597c45763","status":"passed","time":{"start":1742042342570,"stop":1742042342741,"duration":171}},{"uid":"f5278a04f864414c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/f5278a04f864414c","status":"passed","time":{"start":1742042102333,"stop":1742042102514,"duration":181}},{"uid":"8a3e63e92c2edda8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/152//#testresult/8a3e63e92c2edda8","status":"passed","time":{"start":1742041919588,"stop":1742041919746,"duration":158}},{"uid":"bc6b05d6269f1864","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/151//#testresult/bc6b05d6269f1864","status":"passed","time":{"start":1742041753297,"stop":1742041753454,"duration":157}},{"uid":"54b300218f1f000d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/149//#testresult/54b300218f1f000d","status":"passed","time":{"start":1741957214875,"stop":1741957215105,"duration":230}}]},"tags":[]},"source":"213321d2558a4f8c.json","parameterValues":["GET - https://testback.famacare.com/api/service/fetch/Imaging%20Investigation","401"]}