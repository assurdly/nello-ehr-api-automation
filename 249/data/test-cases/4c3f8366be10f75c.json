{"uid":"4c3f8366be10f75c","name":"Add result-Notes-Required","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation/Post Result#Add result-Notes-Required","historyId":"28e28d5410bddd7edbcb55951ae0a42a:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742492106177,"stop":1742492106292,"duration":115},"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742492106290,"stop":1742492106290,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:548)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is failed","time":{"start":1742492106290,"stop":1742492106290,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:548)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error is an array and not empty","time":{"start":1742492106291,"stop":1742492106291,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:548)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"An error message is displayed","time":{"start":1742492106291,"stop":1742492106291,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:548)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bf644d4ea2622713","name":"TestScript","source":"bf644d4ea2622713.txt","type":"text/plain","size":497},{"uid":"f8689106effc43ae","name":"Request Headers","source":"f8689106effc43ae.json","type":"application/json","size":395},{"uid":"79918ef0c9bef09e","name":"Request Body","source":"79918ef0c9bef09e.txt","type":"text/plain","size":338},{"uid":"6f69c06bf31e0d44","name":"Response Headers","source":"6f69c06bf31e0d44.json","type":"application/json","size":354},{"uid":"152c49876d82bf4a","name":"Response Body","source":"152c49876d82bf4a.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1296-753"},{"name":"thread","value":"pid-2406-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation > Post Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":14},"items":[{"uid":"db4b181dfd707d9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/248//#testresult/db4b181dfd707d9","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array, Error message is correct","time":{"start":1742491925812,"stop":1742491925933,"duration":121}},{"uid":"803ce21c384929b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/247//#testresult/803ce21c384929b","status":"passed","time":{"start":1742491778281,"stop":1742491778466,"duration":185}},{"uid":"4d8ffece68b4e818","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/246//#testresult/4d8ffece68b4e818","status":"passed","time":{"start":1742491533891,"stop":1742491534007,"duration":116}},{"uid":"870b3f8ac1bdca6c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/245//#testresult/870b3f8ac1bdca6c","status":"passed","time":{"start":1742491193188,"stop":1742491193349,"duration":161}},{"uid":"a148c206d62963f5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/244//#testresult/a148c206d62963f5","status":"passed","time":{"start":1742490974199,"stop":1742490974313,"duration":114}},{"uid":"ea453bc64902fb09","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/243//#testresult/ea453bc64902fb09","status":"passed","time":{"start":1742490809859,"stop":1742490809995,"duration":136}},{"uid":"5bda42ab94b2a61f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/242//#testresult/5bda42ab94b2a61f","status":"passed","time":{"start":1742490600716,"stop":1742490600836,"duration":120}},{"uid":"ebadabff479ec221","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/241//#testresult/ebadabff479ec221","status":"passed","time":{"start":1742490464488,"stop":1742490464659,"duration":171}},{"uid":"816b32852de1f920","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/240//#testresult/816b32852de1f920","status":"passed","time":{"start":1742490220773,"stop":1742490220891,"duration":118}},{"uid":"c9106643d06961d6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/239//#testresult/c9106643d06961d6","status":"passed","time":{"start":1742490032841,"stop":1742490032960,"duration":119}},{"uid":"ca5d42f643a8308","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/238//#testresult/ca5d42f643a8308","status":"passed","time":{"start":1742489517236,"stop":1742489517420,"duration":184}},{"uid":"43f82692a328fec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/237//#testresult/43f82692a328fec","status":"passed","time":{"start":1742489287262,"stop":1742489287383,"duration":121}},{"uid":"d03ef598a87bc99","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/236//#testresult/d03ef598a87bc99","status":"passed","time":{"start":1742489094037,"stop":1742489094160,"duration":123}}]},"tags":[]},"source":"4c3f8366be10f75c.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}