{"uid":"2829e26b22f6634d","name":"Add result-TestName-Required","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation#Add result-TestName-Required","historyId":"13844f337f52d2aa2a2430a0ce93ffe8:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742304357405,"stop":1742304357540,"duration":135},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742304357537,"stop":1742304357537,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:591)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742304357538,"stop":1742304357538,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:591)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742304357538,"stop":1742304357538,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:591)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1742304357538,"stop":1742304357538,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:591)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"88f9f98ce4538d7d","name":"TestScript","source":"88f9f98ce4538d7d.txt","type":"text/plain","size":496},{"uid":"d1e1b8fb3cf028d9","name":"Request Headers","source":"d1e1b8fb3cf028d9.json","type":"application/json","size":398},{"uid":"d146591f66591586","name":"Request Body","source":"d146591f66591586.txt","type":"text/plain","size":419},{"uid":"74f3624976843e30","name":"Response Headers","source":"74f3624976843e30.json","type":"application/json","size":354},{"uid":"84f685babe1adb6b","name":"Response Body","source":"84f685babe1adb6b.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1660-24"},{"name":"thread","value":"pid-2412-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"8c70af01438811bc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/220//#testresult/8c70af01438811bc","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742304196887,"stop":1742304197080,"duration":193}},{"uid":"4abd871b88a7b397","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/219//#testresult/4abd871b88a7b397","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303965389,"stop":1742303965505,"duration":116}},{"uid":"299d76c579b967b3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/218//#testresult/299d76c579b967b3","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303812975,"stop":1742303813162,"duration":187}},{"uid":"b68ecf5498f6e6ab","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/217//#testresult/b68ecf5498f6e6ab","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303562346,"stop":1742303562468,"duration":122}},{"uid":"d3d9ae8b398c7b5d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/216//#testresult/d3d9ae8b398c7b5d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303435970,"stop":1742303436156,"duration":186}},{"uid":"bc5059854b293f93","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/215//#testresult/bc5059854b293f93","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303192026,"stop":1742303192144,"duration":118}},{"uid":"d14ec223af15751f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/214//#testresult/d14ec223af15751f","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742303005151,"stop":1742303005270,"duration":119}},{"uid":"dc42c6ff9cb8c815","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/213//#testresult/dc42c6ff9cb8c815","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742302809986,"stop":1742302810245,"duration":259}},{"uid":"596272cdd90cd88c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/212//#testresult/596272cdd90cd88c","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742302657912,"stop":1742302658097,"duration":185}},{"uid":"3a3cd990ca215a7b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/211//#testresult/3a3cd990ca215a7b","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742302424014,"stop":1742302424152,"duration":138}},{"uid":"983fbc5e40a85ca6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/210//#testresult/983fbc5e40a85ca6","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742302263753,"stop":1742302263938,"duration":185}},{"uid":"58c1c91e9c09ccb4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/209//#testresult/58c1c91e9c09ccb4","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742302035329,"stop":1742302035468,"duration":139}},{"uid":"ca44e72672b21389","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/208//#testresult/ca44e72672b21389","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301821195,"stop":1742301821335,"duration":140}},{"uid":"85b67658d39d6b9d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/207//#testresult/85b67658d39d6b9d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301674115,"stop":1742301674299,"duration":184}},{"uid":"f5b290d997267f1c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/206//#testresult/f5b290d997267f1c","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301450316,"stop":1742301450452,"duration":136}},{"uid":"2a22f1322937e88a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/205//#testresult/2a22f1322937e88a","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301288144,"stop":1742301288331,"duration":187}},{"uid":"b2035e5dffd2639","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/204//#testresult/b2035e5dffd2639","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742301042067,"stop":1742301042189,"duration":122}}]},"tags":[]},"source":"2829e26b22f6634d.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}