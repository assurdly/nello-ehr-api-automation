{"uid":"99636baf89d20eaa","name":"Add result-Unique-TestName","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation/Investigation#Add result-Unique-TestName","historyId":"ea0e8062de5a8432929d97d6cd2da438:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742499514196,"stop":1742499514382,"duration":186},"status":"failed","statusMessage":"Response status code is 400, testName must be unique","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, testName must be unique","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1742499514380,"stop":1742499514380,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:617)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"testName must be unique","time":{"start":1742499514381,"stop":1742499514381,"duration":0},"status":"failed","statusMessage":"expected 'Token is not valid' to deeply equal 'A result with this encounterUuid and …'","statusTrace":"AssertionError: expected 'Token is not valid' to deeply equal 'A result with this encounterUuid and …'\n   at Object.eval sandbox-script.js:2:617)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"63130ec1c892be22","name":"TestScript","source":"63130ec1c892be22.txt","type":"text/plain","size":300},{"uid":"f910fe2ca5fffbad","name":"Request Headers","source":"f910fe2ca5fffbad.json","type":"application/json","size":398},{"uid":"7d907a86af2725aa","name":"Request Body","source":"7d907a86af2725aa.txt","type":"text/plain","size":445},{"uid":"c051c1d7b4624915","name":"Response Headers","source":"c051c1d7b4624915.json","type":"application/json","size":354},{"uid":"fb8f3f5f7083fa7d","name":"Response Body","source":"fb8f3f5f7083fa7d.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1047-595"},{"name":"thread","value":"pid-2401-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation > Investigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"742e3eb5ea539423","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/271//#testresult/742e3eb5ea539423","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742499293165,"stop":1742499293301,"duration":136}},{"uid":"863322008eb69c20","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/270//#testresult/863322008eb69c20","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742499108484,"stop":1742499108621,"duration":137}},{"uid":"72bcafb8816b6f57","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/72bcafb8816b6f57","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742498913320,"stop":1742498913455,"duration":135}},{"uid":"b9f714c10c43c98e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/b9f714c10c43c98e","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742498522839,"stop":1742498522955,"duration":116}},{"uid":"c76593637f252aec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/c76593637f252aec","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742498398027,"stop":1742498398212,"duration":185}},{"uid":"1c89a9cf2db61fca","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/1c89a9cf2db61fca","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742498202331,"stop":1742498202514,"duration":183}},{"uid":"8dcaced820426d47","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/8dcaced820426d47","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742497961486,"stop":1742497961600,"duration":114}},{"uid":"d9f859694d7a814b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/d9f859694d7a814b","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742497759280,"stop":1742497759398,"duration":118}},{"uid":"8ca54020fe12a2cb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/8ca54020fe12a2cb","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742497567706,"stop":1742497567828,"duration":122}},{"uid":"36952f641028f267","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/36952f641028f267","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742494378720,"stop":1742494378841,"duration":121}}]},"tags":[]},"source":"99636baf89d20eaa.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}