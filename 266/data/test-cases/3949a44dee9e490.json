{"uid":"3949a44dee9e490","name":"Add result-TestName-Required","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation/Investigation#Add result-TestName-Required","historyId":"5dfdf9822c72b72d6ad14f9397cd5ad0:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742498201588,"stop":1742498201771,"duration":183},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742498201768,"stop":1742498201768,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:613)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742498201768,"stop":1742498201768,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:613)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742498201769,"stop":1742498201769,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:613)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1742498201769,"stop":1742498201769,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:613)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f2aeabc6cfa5d380","name":"TestScript","source":"f2aeabc6cfa5d380.txt","type":"text/plain","size":496},{"uid":"648e33b3d1e898fd","name":"Request Headers","source":"648e33b3d1e898fd.json","type":"application/json","size":398},{"uid":"8e04835aff1329e7","name":"Request Body","source":"8e04835aff1329e7.txt","type":"text/plain","size":419},{"uid":"5c002d154304758b","name":"Response Headers","source":"5c002d154304758b.json","type":"application/json","size":354},{"uid":"3ccbe7aea0df08d7","name":"Response Body","source":"3ccbe7aea0df08d7.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1701-882"},{"name":"thread","value":"pid-2455-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation > Investigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"3ee05258925a1fd4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/3ee05258925a1fd4","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497960912,"stop":1742497961051,"duration":139}},{"uid":"8b5728e2e78b49f3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/8b5728e2e78b49f3","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497758787,"stop":1742497758906,"duration":119}},{"uid":"4af58d4a18f692a4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/4af58d4a18f692a4","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497567207,"stop":1742497567330,"duration":123}},{"uid":"ce343de0a9a35fe8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/ce343de0a9a35fe8","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742494378230,"stop":1742494378351,"duration":121}}]},"tags":[]},"source":"3949a44dee9e490.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}