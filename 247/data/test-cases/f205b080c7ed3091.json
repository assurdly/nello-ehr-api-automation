{"uid":"f205b080c7ed3091","name":"Add result-TestName-Required","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation/Post Result#Add result-TestName-Required","historyId":"ffe092df488dc7116ddd557c3567532c:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742491778092,"stop":1742491778279,"duration":187},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742491778276,"stop":1742491778276,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742491778277,"stop":1742491778277,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742491778277,"stop":1742491778277,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1742491778277,"stop":1742491778277,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"517e5e58d7ea1097","name":"TestScript","source":"517e5e58d7ea1097.txt","type":"text/plain","size":496},{"uid":"d59213c6816d6fb9","name":"Request Headers","source":"d59213c6816d6fb9.json","type":"application/json","size":395},{"uid":"4e19100d2120f0d9","name":"Request Body","source":"4e19100d2120f0d9.txt","type":"text/plain","size":418},{"uid":"ea2d7cfe1526bbdc","name":"Response Headers","source":"ea2d7cfe1526bbdc.json","type":"application/json","size":354},{"uid":"3d6d4c09b8712846","name":"Response Body","source":"3d6d4c09b8712846.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1344-375"},{"name":"thread","value":"pid-2376-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation > Post Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"2175c69b61465cf4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/246//#testresult/2175c69b61465cf4","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742491533773,"stop":1742491533888,"duration":115}},{"uid":"98f0700eebcc0a8d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/245//#testresult/98f0700eebcc0a8d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742491193024,"stop":1742491193186,"duration":162}},{"uid":"5e3fcc499f28e504","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/244//#testresult/5e3fcc499f28e504","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490974079,"stop":1742490974196,"duration":117}},{"uid":"d40e9d036e8ed2e9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/243//#testresult/d40e9d036e8ed2e9","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490809718,"stop":1742490809856,"duration":138}},{"uid":"de40f964848ad491","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/242//#testresult/de40f964848ad491","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490600591,"stop":1742490600714,"duration":123}},{"uid":"c470e5881e9ab66c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/241//#testresult/c470e5881e9ab66c","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490464310,"stop":1742490464485,"duration":175}},{"uid":"534dbd1fe6f6c75e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/240//#testresult/534dbd1fe6f6c75e","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490220650,"stop":1742490220770,"duration":120}},{"uid":"a8db54d72ca70e1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/239//#testresult/a8db54d72ca70e1","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742490032714,"stop":1742490032838,"duration":124}},{"uid":"cce55f53ad2c74be","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/238//#testresult/cce55f53ad2c74be","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742489517046,"stop":1742489517233,"duration":187}},{"uid":"b1d2a63e4e444629","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/237//#testresult/b1d2a63e4e444629","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742489287136,"stop":1742489287260,"duration":124}},{"uid":"66e3c3fd6b0d32eb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/236//#testresult/66e3c3fd6b0d32eb","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742489093914,"stop":1742489094035,"duration":121}}]},"tags":[]},"source":"f205b080c7ed3091.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}