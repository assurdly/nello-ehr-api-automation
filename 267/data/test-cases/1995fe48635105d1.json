{"uid":"1995fe48635105d1","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/RADIOLOGIST/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"c663c6820a2c791e5f96517d32292993:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742498381772,"stop":1742498381956,"duration":184},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742498381953,"stop":1742498381953,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742498381953,"stop":1742498381953,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounters list is not empty","time":{"start":1742498381954,"stop":1742498381954,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each encounter contains required fields","time":{"start":1742498381954,"stop":1742498381954,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742498381955,"stop":1742498381955,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e3c0ff08549df20b","name":"TestScript","source":"e3c0ff08549df20b.txt","type":"text/plain","size":1297},{"uid":"2bb62d8057b21f17","name":"Request Headers","source":"2bb62d8057b21f17.json","type":"application/json","size":326},{"uid":"44ae962ef1b7d86b","name":"Response Headers","source":"44ae962ef1b7d86b.json","type":"application/json","size":354},{"uid":"40def94fd7086507","name":"Response Body","source":"40def94fd7086507.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1047-595"},{"name":"thread","value":"pid-2432-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":103,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":114},"items":[{"uid":"c93f9802bed29539","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/c93f9802bed29539","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742498185055,"stop":1742498185238,"duration":183}},{"uid":"9a24a0ef4d32c0f6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/9a24a0ef4d32c0f6","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497949303,"stop":1742497949441,"duration":138}},{"uid":"c335da49d34f2943","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/c335da49d34f2943","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497747453,"stop":1742497747575,"duration":122}},{"uid":"f3ed5ca278a2fd78","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/f3ed5ca278a2fd78","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497553783,"stop":1742497553905,"duration":122}},{"uid":"1adacb3653310f14","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/1adacb3653310f14","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742494363732,"stop":1742494363852,"duration":120}},{"uid":"8e854f6f539137c4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/259//#testresult/8e854f6f539137c4","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742494168913,"stop":1742494169033,"duration":120}},{"uid":"ca05984859264742","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/258//#testresult/ca05984859264742","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493796849,"stop":1742493796969,"duration":120}},{"uid":"ed1abaaabb560c79","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/256//#testresult/ed1abaaabb560c79","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493657095,"stop":1742493657281,"duration":186}},{"uid":"3486d8b115b96ccc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/255//#testresult/3486d8b115b96ccc","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493414213,"stop":1742493414334,"duration":121}},{"uid":"8e66af4fc774a543","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/254//#testresult/8e66af4fc774a543","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493226477,"stop":1742493226601,"duration":124}},{"uid":"d8132ff5a3858e4f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/253//#testresult/d8132ff5a3858e4f","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493053926,"stop":1742493054062,"duration":136}},{"uid":"76f2249bb7405dba","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/252//#testresult/76f2249bb7405dba","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742492852639,"stop":1742492852760,"duration":121}},{"uid":"c2107c5597c2800a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/251//#testresult/c2107c5597c2800a","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742492526382,"stop":1742492526568,"duration":186}},{"uid":"39306b15dd413a58","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/250//#testresult/39306b15dd413a58","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742492336100,"stop":1742492336287,"duration":187}},{"uid":"fafa11a8640e3c86","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/249//#testresult/fafa11a8640e3c86","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742492105324,"stop":1742492105469,"duration":145}},{"uid":"9f0437cd02d4b737","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/248//#testresult/9f0437cd02d4b737","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742491923892,"stop":1742491924012,"duration":120}},{"uid":"d342308dbeca02ff","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/247//#testresult/d342308dbeca02ff","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742491776965,"stop":1742491777152,"duration":187}},{"uid":"f3744dd5864785cc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/246//#testresult/f3744dd5864785cc","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742491532992,"stop":1742491533110,"duration":118}},{"uid":"2dcdf1d645bcb2c0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/245//#testresult/2dcdf1d645bcb2c0","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742491192023,"stop":1742491192206,"duration":183}},{"uid":"6b72ca23e82535c5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/244//#testresult/6b72ca23e82535c5","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742490973365,"stop":1742490973484,"duration":119}}]},"tags":[]},"source":"1995fe48635105d1.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}