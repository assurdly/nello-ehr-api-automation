{"uid":"bb5efbf2dfe778e4","name":"Create-Service-NotPermitted","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Services/Service-Create#Create-Service-NotPermitted","historyId":"5392848acd82964c669f3a865c0af88c:92279dc9005c0a0bf524e8f312581659","time":{"start":1742045992744,"stop":1742045992866,"duration":122},"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 403 (Forbidden)","time":{"start":1742045992863,"stop":1742045992863,"duration":0},"status":"failed","statusMessage":"expected response to have status code 403 but got 401","statusTrace":"AssertionError: expected response to have status code 403 but got 401\n   at Object.eval sandbox-script.js:1:576)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Error message is correct","time":{"start":1742045992863,"stop":1742045992863,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'\n   at Object.eval sandbox-script.js:2:576)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"User object is present and has required fields","time":{"start":1742045992864,"stop":1742045992864,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'user'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'user'\n   at Object.eval sandbox-script.js:3:576)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"User role is not Admin or Receptionist","time":{"start":1742045992864,"stop":1742045992864,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'role')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'role')\n   at Object.eval sandbox-script.js:4:576)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"4a8a60f6cf39d1c3","name":"TestScript","source":"4a8a60f6cf39d1c3.txt","type":"text/plain","size":952},{"uid":"5ea1d8c5be379c6f","name":"Request Headers","source":"5ea1d8c5be379c6f.json","type":"application/json","size":395},{"uid":"b2acd0750b70a8dd","name":"Request Body","source":"b2acd0750b70a8dd.txt","type":"text/plain","size":137},{"uid":"775b2b7aafc11247","name":"Response Headers","source":"775b2b7aafc11247.json","type":"application/json","size":354},{"uid":"3546809c0a341978","name":"Response Body","source":"3546809c0a341978.txt","type":"text/plain","size":32}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1782-168"},{"name":"thread","value":"pid-2380-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Services > Service-Create"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/service/addservice"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":24},"items":[{"uid":"8b7606e4d10ce791","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/172//#testresult/8b7606e4d10ce791","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742045821362,"stop":1742045821501,"duration":139}},{"uid":"3db4e2f22d02b4e7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/171//#testresult/3db4e2f22d02b4e7","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742045625885,"stop":1742045626006,"duration":121}},{"uid":"c20e0d771aceb724","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/170//#testresult/c20e0d771aceb724","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742045437755,"stop":1742045437874,"duration":119}},{"uid":"ac50d6611f46b696","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/169//#testresult/ac50d6611f46b696","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742045298724,"stop":1742045298893,"duration":169}},{"uid":"5b84c5ad224b7033","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/168//#testresult/5b84c5ad224b7033","status":"failed","statusDetails":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","time":{"start":1742045123751,"stop":1742045123935,"duration":184}},{"uid":"9161cea0ef3e3902","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/167//#testresult/9161cea0ef3e3902","status":"passed","time":{"start":1742044989189,"stop":1742044989328,"duration":139}},{"uid":"38f894f20e8fa72a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/166//#testresult/38f894f20e8fa72a","status":"passed","time":{"start":1742044711500,"stop":1742044711700,"duration":200}},{"uid":"868ffa97f4222b8f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/868ffa97f4222b8f","status":"passed","time":{"start":1742044533348,"stop":1742044533468,"duration":120}},{"uid":"3a3d92cb5337e0c8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/3a3d92cb5337e0c8","status":"passed","time":{"start":1742044368921,"stop":1742044369063,"duration":142}},{"uid":"fdf986960e78609c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/fdf986960e78609c","status":"passed","time":{"start":1742044162017,"stop":1742044162137,"duration":120}},{"uid":"ac6a172d46cd184c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/ac6a172d46cd184c","status":"passed","time":{"start":1742043974652,"stop":1742043975009,"duration":357}},{"uid":"beddc1eb0f351814","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/beddc1eb0f351814","status":"passed","time":{"start":1742043846010,"stop":1742043846196,"duration":186}},{"uid":"bba992b56f2c9978","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/bba992b56f2c9978","status":"passed","time":{"start":1742043652512,"stop":1742043652675,"duration":163}},{"uid":"4edabc83dac03682","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/4edabc83dac03682","status":"passed","time":{"start":1742043439322,"stop":1742043439442,"duration":120}},{"uid":"4e07e99baf326578","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/4e07e99baf326578","status":"passed","time":{"start":1742043256812,"stop":1742043256932,"duration":120}},{"uid":"27c59fa7b6f073d4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/27c59fa7b6f073d4","status":"passed","time":{"start":1742043071599,"stop":1742043071721,"duration":122}},{"uid":"806496e0f9fa51c7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/806496e0f9fa51c7","status":"passed","time":{"start":1742042884803,"stop":1742042884922,"duration":119}},{"uid":"79d20773e746a34d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/79d20773e746a34d","status":"passed","time":{"start":1742042571324,"stop":1742042571509,"duration":185}},{"uid":"727ade6d74f6791a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/727ade6d74f6791a","status":"passed","time":{"start":1742042410584,"stop":1742042410722,"duration":138}},{"uid":"e10637c7b31c994e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/e10637c7b31c994e","status":"passed","time":{"start":1742042169753,"stop":1742042169892,"duration":139}}]},"tags":[]},"source":"bb5efbf2dfe778e4.json","parameterValues":["POST - https://testback.famacare.com/api/service/addservice","401"]}