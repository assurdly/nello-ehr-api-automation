{"uid":"bc28eec8513f3fc6","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"6efa7619438d8758eca28c9a831ea402:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742045992250,"stop":1742045992373,"duration":123},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742045992370,"stop":1742045992370,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:572)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Response status is success","time":{"start":1742045992371,"stop":1742045992371,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:572)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Encounters list is not empty","time":{"start":1742045992371,"stop":1742045992371,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:572)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Each encounter contains required fields","time":{"start":1742045992371,"stop":1742045992372,"duration":1},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:572)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742045992372,"stop":1742045992372,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:572)","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"6503d49f0acc9102","name":"TestScript","source":"6503d49f0acc9102.txt","type":"text/plain","size":1297},{"uid":"abee2b3cc0d4cde6","name":"Request Headers","source":"abee2b3cc0d4cde6.json","type":"application/json","size":326},{"uid":"7a4d3b93cc15efd0","name":"Response Headers","source":"7a4d3b93cc15efd0.json","type":"application/json","size":354},{"uid":"c23ec474a27bce4","name":"Response Body","source":"c23ec474a27bce4.txt","type":"text/plain","size":32}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1782-168"},{"name":"thread","value":"pid-2380-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":24},"items":[{"uid":"eb8178b3a0bee6ec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/172//#testresult/eb8178b3a0bee6ec","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742045820802,"stop":1742045820940,"duration":138}},{"uid":"492b146b1f1a98c6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/171//#testresult/492b146b1f1a98c6","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742045624095,"stop":1742045625517,"duration":1422}},{"uid":"ffee3ba7f77530cf","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/170//#testresult/ffee3ba7f77530cf","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742045437275,"stop":1742045437396,"duration":121}},{"uid":"bd3604a8b98f0cb4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/169//#testresult/bd3604a8b98f0cb4","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742045298049,"stop":1742045298216,"duration":167}},{"uid":"b070bad02dfb5aff","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/168//#testresult/b070bad02dfb5aff","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742045123009,"stop":1742045123194,"duration":185}},{"uid":"d47db2eceffdb483","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/167//#testresult/d47db2eceffdb483","status":"passed","time":{"start":1742044987470,"stop":1742044988776,"duration":1306}},{"uid":"2f382f36b8759e06","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/166//#testresult/2f382f36b8759e06","status":"passed","time":{"start":1742044709815,"stop":1742044711134,"duration":1319}},{"uid":"fc6be6b3b334ddf1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/fc6be6b3b334ddf1","status":"passed","time":{"start":1742044531705,"stop":1742044532985,"duration":1280}},{"uid":"fa96dd8e4fca48d0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/fa96dd8e4fca48d0","status":"passed","time":{"start":1742044367155,"stop":1742044368499,"duration":1344}},{"uid":"faaafdf83030992b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/faaafdf83030992b","status":"passed","time":{"start":1742044160421,"stop":1742044161660,"duration":1239}},{"uid":"5ba21c99462e796f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/5ba21c99462e796f","status":"passed","time":{"start":1742043972882,"stop":1742043974279,"duration":1397}},{"uid":"156ed344dc19ee41","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/156ed344dc19ee41","status":"passed","time":{"start":1742043843802,"stop":1742043845450,"duration":1648}},{"uid":"1e701ca9856dac05","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/1e701ca9856dac05","status":"passed","time":{"start":1742043650352,"stop":1742043652019,"duration":1667}},{"uid":"2e2654d5498f71f0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/2e2654d5498f71f0","status":"passed","time":{"start":1742043437689,"stop":1742043438950,"duration":1261}},{"uid":"7c1aadecd0c479c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/7c1aadecd0c479c","status":"passed","time":{"start":1742043255165,"stop":1742043256430,"duration":1265}},{"uid":"4ddffe2d6c5c88b6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/4ddffe2d6c5c88b6","status":"passed","time":{"start":1742043069975,"stop":1742043071232,"duration":1257}},{"uid":"8ecb16cbbfb78472","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/8ecb16cbbfb78472","status":"passed","time":{"start":1742042883251,"stop":1742042884439,"duration":1188}},{"uid":"94b62d10966ad238","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/94b62d10966ad238","status":"passed","time":{"start":1742042569058,"stop":1742042570758,"duration":1700}},{"uid":"e86893d57d0b0dda","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/e86893d57d0b0dda","status":"passed","time":{"start":1742042408128,"stop":1742042409475,"duration":1347}},{"uid":"48a2fc8e70677e5e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/48a2fc8e70677e5e","status":"passed","time":{"start":1742042168017,"stop":1742042169334,"duration":1317}}]},"tags":[]},"source":"bc28eec8513f3fc6.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}