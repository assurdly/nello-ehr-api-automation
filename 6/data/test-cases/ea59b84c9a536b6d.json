{"uid":"ea59b84c9a536b6d","name":"Create-Service-AlreadyExist","fullName":"FamaEMR - Test pack/RECEPTIONIST/Services/Service-Create#Create-Service-AlreadyExist","historyId":"9ce861b433c3f7d86fe3aea1ec8dd79f:92279dc9005c0a0bf524e8f312581659","time":{"start":1739986591880,"stop":1739986592050,"duration":170},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739986592047,"stop":1739986592047,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:413)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739986592047,"stop":1739986592047,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:413)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1739986592048,"stop":1739986592048,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'Service Already Exists'","statusTrace":"AssertionError: expected undefined to deeply equal 'Service Already Exists'\n   at Object.eval sandbox-script.js:3:413)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"aaf9fc207dff085b","name":"TestScript","source":"aaf9fc207dff085b.txt","type":"text/plain","size":367},{"uid":"65a1cee2dde5e2da","name":"Request Headers","source":"65a1cee2dde5e2da.json","type":"application/json","size":397},{"uid":"b9c68b2e298cbf9d","name":"Request Body","source":"b9c68b2e298cbf9d.txt","type":"text/plain","size":137},{"uid":"179b95b7e6eb95d0","name":"Response Headers","source":"179b95b7e6eb95d0.json","type":"application/json","size":354},{"uid":"b76def46f08fc869","name":"Response Body","source":"b76def46f08fc869.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1921-368"},{"name":"thread","value":"pid-2384-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Services > Service-Create"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/service/addservice"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"ae457e0646d6dc21","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/ae457e0646d6dc21","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739984500832,"stop":1739984500951,"duration":119}},{"uid":"b95d94f631b675ab","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/b95d94f631b675ab","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739983336979,"stop":1739983337103,"duration":124}},{"uid":"fca4a0c86d5afdd0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/fca4a0c86d5afdd0","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739978731135,"stop":1739978731321,"duration":186}},{"uid":"98feb145fcaebfd4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/98feb145fcaebfd4","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739905916857,"stop":1739905917045,"duration":188}},{"uid":"82e65ed40438743e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/3//#testresult/82e65ed40438743e","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739905696205,"stop":1739905696326,"duration":121}},{"uid":"2971864647e642f6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/2//#testresult/2971864647e642f6","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739905521412,"stop":1739905521551,"duration":139}},{"uid":"6f274ddf55a7e922","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/1//#testresult/6f274ddf55a7e922","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error message is correct","time":{"start":1739902589193,"stop":1739902589377,"duration":184}}]},"tags":[]},"source":"ea59b84c9a536b6d.json","parameterValues":["POST - https://testback.famacare.com/api/service/addservice","401"]}