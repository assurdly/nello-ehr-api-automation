{"uid":"6ba9a2c5fcbb3fa5","name":"fetch all services-Successful","fullName":"FamaEMR - Test pack/RECEPTIONIST/Services/fetch all services#fetch all services-Successful","historyId":"12957509f2ab99b444732b3348691b75:f7b688ff8e69ed1c2a72b2eef3df6c2f","time":{"start":1740680129775,"stop":1740680129938,"duration":163},"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status is 200","time":{"start":1740680129936,"stop":1740680129936,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:414)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains services","time":{"start":1740680129936,"stop":1740680129936,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:414)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Service details are valid","time":{"start":1740680129937,"stop":1740680129937,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:414)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"57a7ccaccb135e92","name":"TestScript","source":"57a7ccaccb135e92.txt","type":"text/plain","size":1108},{"uid":"ae555e9e3bc8c704","name":"Request Headers","source":"ae555e9e3bc8c704.json","type":"application/json","size":328},{"uid":"8692ad581ffafd57","name":"Response Headers","source":"8692ad581ffafd57.json","type":"application/json","size":354},{"uid":"964d1136f83e7830","name":"Response Body","source":"964d1136f83e7830.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1675-456"},{"name":"thread","value":"pid-2383-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Services > fetch all services"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/service/fetch"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"d3504d75c65923f5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/13//#testresult/d3504d75c65923f5","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740674586920,"stop":1740674587083,"duration":163}},{"uid":"e0772badb3c404f2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/12//#testresult/e0772badb3c404f2","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740341519116,"stop":1740341519277,"duration":161}},{"uid":"7378c4a67f50f080","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/11//#testresult/7378c4a67f50f080","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740161974404,"stop":1740161974521,"duration":117}},{"uid":"37718bb3a9b121fc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/10//#testresult/37718bb3a9b121fc","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740152623540,"stop":1740152623658,"duration":118}},{"uid":"5b0a86dfa03b33ed","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/9//#testresult/5b0a86dfa03b33ed","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740152460868,"stop":1740152461051,"duration":183}},{"uid":"75b495deacdfc8e3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/8//#testresult/75b495deacdfc8e3","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1740075285725,"stop":1740075285858,"duration":133}},{"uid":"45f2e5ba1316e433","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/7//#testresult/45f2e5ba1316e433","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739986646695,"stop":1739986646832,"duration":137}},{"uid":"cc7f2522d2e342b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/6//#testresult/cc7f2522d2e342b","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739986592052,"stop":1739986592220,"duration":168}},{"uid":"c55d96de5a904dac","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/c55d96de5a904dac","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739984500953,"stop":1739984501073,"duration":120}},{"uid":"3c58a7fbe368ff23","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/3c58a7fbe368ff23","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739983337106,"stop":1739983337229,"duration":123}},{"uid":"65e08fa8e3be4e7f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/65e08fa8e3be4e7f","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739978731323,"stop":1739978731508,"duration":185}},{"uid":"d1e9894ba975d05c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/d1e9894ba975d05c","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739905917047,"stop":1739905917233,"duration":186}},{"uid":"44b53b9a6eb8d4e3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/3//#testresult/44b53b9a6eb8d4e3","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739905696329,"stop":1739905696450,"duration":121}},{"uid":"b49e4364d96812e4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/2//#testresult/b49e4364d96812e4","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739905521554,"stop":1739905521690,"duration":136}},{"uid":"6d04786f25da6140","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/1//#testresult/6d04786f25da6140","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739902589380,"stop":1739902589564,"duration":184}}]},"tags":[]},"source":"6ba9a2c5fcbb3fa5.json","parameterValues":["GET - https://testback.famacare.com/api/service/fetch","401"]}