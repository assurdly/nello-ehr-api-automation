{"uid":"763734ae2ce27199","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1740075260323,"stop":1740075260458,"duration":135},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1740075260455,"stop":1740075260455,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1740075260456,"stop":1740075260456,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1740075260456,"stop":1740075260456,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1740075260457,"stop":1740075260457,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1740075260457,"stop":1740075260457,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"42ab7f345e82874a","name":"TestScript","source":"42ab7f345e82874a.txt","type":"text/plain","size":1231},{"uid":"77701d2400083d86","name":"Request Headers","source":"77701d2400083d86.json","type":"application/json","size":397},{"uid":"60e649f3623ecf2c","name":"Request Body","source":"60e649f3623ecf2c.txt","type":"text/plain","size":686},{"uid":"3be5585e7f058c2a","name":"Response Headers","source":"3be5585e7f058c2a.json","type":"application/json","size":354},{"uid":"30b3105441a25acc","name":"Response Body","source":"30b3105441a25acc.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1660-530"},{"name":"thread","value":"pid-2470-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"2ce7d6fa4f9e133a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/7//#testresult/2ce7d6fa4f9e133a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739986620955,"stop":1739986621095,"duration":140}},{"uid":"9dc9832e3a9db622","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/6//#testresult/9dc9832e3a9db622","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739986562137,"stop":1739986562306,"duration":169}},{"uid":"8e8fb54757f7c3c6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/8e8fb54757f7c3c6","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739984476445,"stop":1739984476566,"duration":121}},{"uid":"91e36db77cf9f24","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/5//#testresult/91e36db77cf9f24","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739983311948,"stop":1739983312074,"duration":126}},{"uid":"739ddffae0d7ef7e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/739ddffae0d7ef7e","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739978700806,"stop":1739978700992,"duration":186}},{"uid":"842395eb61304356","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/4//#testresult/842395eb61304356","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739905886604,"stop":1739905886791,"duration":187}},{"uid":"60564ebc90664669","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/3//#testresult/60564ebc90664669","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739905671822,"stop":1739905671945,"duration":123}},{"uid":"5227fb15488ba724","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/2//#testresult/5227fb15488ba724","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739905495108,"stop":1739905495249,"duration":141}},{"uid":"cf4f282a5fe34795","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/1//#testresult/cf4f282a5fe34795","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739902558568,"stop":1739902558753,"duration":185}}]},"tags":[]},"source":"763734ae2ce27199.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}