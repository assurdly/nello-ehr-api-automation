{"uid":"9233331bc153d06","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/RADIOLOGIST/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"c663c6820a2c791e5f96517d32292993:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742299343667,"stop":1742299343836,"duration":169},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742299343832,"stop":1742299343832,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742299343833,"stop":1742299343833,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounters list is not empty","time":{"start":1742299343833,"stop":1742299343833,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each encounter contains required fields","time":{"start":1742299343834,"stop":1742299343834,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742299343834,"stop":1742299343834,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"601d66dcfaca94f6","name":"TestScript","source":"601d66dcfaca94f6.txt","type":"text/plain","size":1297},{"uid":"4d4c5575e5612d95","name":"Request Headers","source":"4d4c5575e5612d95.json","type":"application/json","size":326},{"uid":"ad778e26868badc5","name":"Response Headers","source":"ad778e26868badc5.json","type":"application/json","size":354},{"uid":"fc56ea7c4ca10dce","name":"Response Body","source":"fc56ea7c4ca10dce.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1696-728"},{"name":"thread","value":"pid-2412-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":49},"items":[{"uid":"42f813b4c922edd2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/198//#testresult/42f813b4c922edd2","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298915396,"stop":1742298915517,"duration":121}},{"uid":"45b50b9400655973","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/197//#testresult/45b50b9400655973","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298724345,"stop":1742298724460,"duration":115}},{"uid":"8c4e89102aebd327","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/196//#testresult/8c4e89102aebd327","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298529929,"stop":1742298530049,"duration":120}},{"uid":"f00c75d407d3db94","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/195//#testresult/f00c75d407d3db94","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298400154,"stop":1742298400339,"duration":185}},{"uid":"4690922694a89d3b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/194//#testresult/4690922694a89d3b","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298167345,"stop":1742298167483,"duration":138}},{"uid":"15253dab09edf93","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/193//#testresult/15253dab09edf93","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742298001281,"stop":1742298001453,"duration":172}},{"uid":"76ce264cc6ebe3ca","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/192//#testresult/76ce264cc6ebe3ca","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742297619846,"stop":1742297620030,"duration":184}},{"uid":"aba6627c3ccbb7d7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/191//#testresult/aba6627c3ccbb7d7","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742296992794,"stop":1742296992929,"duration":135}},{"uid":"487efb495131b5b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/190//#testresult/487efb495131b5b","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742296594313,"stop":1742296594450,"duration":137}},{"uid":"fe1c4e37d25cac60","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/189//#testresult/fe1c4e37d25cac60","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742296428900,"stop":1742296429085,"duration":185}},{"uid":"e8a262d5b8f6673e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/188//#testresult/e8a262d5b8f6673e","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742295790837,"stop":1742295790956,"duration":119}},{"uid":"2c48aabe8e94a6c2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/187//#testresult/2c48aabe8e94a6c2","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742295585698,"stop":1742295585817,"duration":119}},{"uid":"2fc1dba1e5953942","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/186//#testresult/2fc1dba1e5953942","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742295406621,"stop":1742295406759,"duration":138}},{"uid":"a1bd24a08de79e10","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/185//#testresult/a1bd24a08de79e10","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742294819241,"stop":1742294819379,"duration":138}},{"uid":"db5051e36450a999","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/184//#testresult/db5051e36450a999","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742294612383,"stop":1742294612501,"duration":118}},{"uid":"de4b23f9129b758e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/183//#testresult/de4b23f9129b758e","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742294274984,"stop":1742294275148,"duration":164}},{"uid":"332cc3e9ad0f2395","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/182//#testresult/332cc3e9ad0f2395","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742294091025,"stop":1742294091211,"duration":186}},{"uid":"21d0d39b844408f7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/181//#testresult/21d0d39b844408f7","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742293879629,"stop":1742293879793,"duration":164}},{"uid":"a8df5dc7824a34e6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/179//#testresult/a8df5dc7824a34e6","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742063117497,"stop":1742063117686,"duration":189}},{"uid":"6d836a2206cca091","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/178//#testresult/6d836a2206cca091","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742062877273,"stop":1742062877408,"duration":135}}]},"tags":[]},"source":"9233331bc153d06.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}