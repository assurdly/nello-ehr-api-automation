{"uid":"5e3a7f6f1044b454","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/RADIOLOGIST/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"c663c6820a2c791e5f96517d32292993:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742490599844,"stop":1742490599967,"duration":123},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742490599964,"stop":1742490599964,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742490599964,"stop":1742490599964,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounters list is not empty","time":{"start":1742490599965,"stop":1742490599965,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each encounter contains required fields","time":{"start":1742490599965,"stop":1742490599965,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742490599965,"stop":1742490599965,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fb3e64486e62cf8","name":"TestScript","source":"fb3e64486e62cf8.txt","type":"text/plain","size":1297},{"uid":"85bcd28ea76acf99","name":"Request Headers","source":"85bcd28ea76acf99.json","type":"application/json","size":326},{"uid":"23705fa3d395db7c","name":"Response Headers","source":"23705fa3d395db7c.json","type":"application/json","size":354},{"uid":"f89ae4b97bf45b02","name":"Response Body","source":"f89ae4b97bf45b02.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1721-628"},{"name":"thread","value":"pid-2414-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":81,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":92},"items":[{"uid":"846936b466c231eb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/241//#testresult/846936b466c231eb","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742490463251,"stop":1742490463427,"duration":176}},{"uid":"3071067557513012","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/240//#testresult/3071067557513012","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742490219918,"stop":1742490220039,"duration":121}},{"uid":"fb6cb615c8160964","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/239//#testresult/fb6cb615c8160964","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742490031957,"stop":1742490032079,"duration":122}},{"uid":"3882229efdc572a9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/238//#testresult/3882229efdc572a9","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742489515914,"stop":1742489516102,"duration":188}},{"uid":"58e39029f46fd923","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/237//#testresult/58e39029f46fd923","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742489286387,"stop":1742489286510,"duration":123}},{"uid":"5dcd7e9507851a20","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/236//#testresult/5dcd7e9507851a20","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742489093180,"stop":1742489093301,"duration":121}},{"uid":"815f22e6241a7d3a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/235//#testresult/815f22e6241a7d3a","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742488716937,"stop":1742488717057,"duration":120}},{"uid":"f499405e043a8ae6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/234//#testresult/f499405e043a8ae6","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742473575615,"stop":1742473575781,"duration":166}},{"uid":"2c6900287e363b41","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/233//#testresult/2c6900287e363b41","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742308663316,"stop":1742308663501,"duration":185}},{"uid":"12566ea68d39a4cf","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/232//#testresult/12566ea68d39a4cf","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742308478507,"stop":1742308478625,"duration":118}},{"uid":"767a838701a6ec79","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/231//#testresult/767a838701a6ec79","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742308233684,"stop":1742308233822,"duration":138}},{"uid":"a8081be0393bd082","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/230//#testresult/a8081be0393bd082","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742308050800,"stop":1742308050937,"duration":137}},{"uid":"73eb0b0d5309e2ca","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/229//#testresult/73eb0b0d5309e2ca","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742307881099,"stop":1742307881284,"duration":185}},{"uid":"77fc4766e92aa0a1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/228//#testresult/77fc4766e92aa0a1","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742307251608,"stop":1742307251728,"duration":120}},{"uid":"b6ab357c6b9a3589","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/227//#testresult/b6ab357c6b9a3589","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742307107191,"stop":1742307107376,"duration":185}},{"uid":"881871bcecd95477","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/226//#testresult/881871bcecd95477","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742306864959,"stop":1742306865079,"duration":120}},{"uid":"94918c0deafc0abd","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/225//#testresult/94918c0deafc0abd","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742306671976,"stop":1742306672096,"duration":120}},{"uid":"3d217c44b7646328","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/224//#testresult/3d217c44b7646328","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742304942883,"stop":1742304943021,"duration":138}},{"uid":"dedb57c4880f967a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/223//#testresult/dedb57c4880f967a","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742304764990,"stop":1742304765158,"duration":168}},{"uid":"e4a963e770f6f214","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/222//#testresult/e4a963e770f6f214","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742304571715,"stop":1742304572041,"duration":326}}]},"tags":[]},"source":"5e3a7f6f1044b454.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}