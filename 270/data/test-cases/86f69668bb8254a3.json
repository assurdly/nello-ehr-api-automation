{"uid":"86f69668bb8254a3","name":"Update Result-TestName-Required","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation/Update Result#Update Result-TestName-Required","historyId":"f67e27651c6d6d3ac1083334dd0bfe08:0d31515477a5c0b947215b9cc328ebab","time":{"start":1742499110570,"stop":1742499110706,"duration":136},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742499110704,"stop":1742499110704,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742499110704,"stop":1742499110704,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742499110705,"stop":1742499110705,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1742499110705,"stop":1742499110705,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5d1fe05e0cd39c6f","name":"TestScript","source":"5d1fe05e0cd39c6f.txt","type":"text/plain","size":496},{"uid":"635527fcb3db7776","name":"Request Headers","source":"635527fcb3db7776.json","type":"application/json","size":395},{"uid":"c8ade184a14c456e","name":"Request Body","source":"c8ade184a14c456e.txt","type":"text/plain","size":441},{"uid":"e8e7dca119b78ec3","name":"Response Headers","source":"e8e7dca119b78ec3.json","type":"application/json","size":354},{"uid":"1d68e589b8078d63","name":"Response Body","source":"1d68e589b8078d63.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1050-876"},{"name":"thread","value":"pid-2384-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation > Update Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"103542a435501eb8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/103542a435501eb8","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498915368,"stop":1742498915502,"duration":134}},{"uid":"f47aaeca1a79aa19","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/f47aaeca1a79aa19","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498524627,"stop":1742498524743,"duration":116}},{"uid":"e609988d3485b51d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/e609988d3485b51d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498400833,"stop":1742498401017,"duration":184}},{"uid":"aa8bd6873787fed2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/aa8bd6873787fed2","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498205122,"stop":1742498205308,"duration":186}},{"uid":"8c59734cdae18681","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/8c59734cdae18681","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497963248,"stop":1742497963362,"duration":114}},{"uid":"3f25361bfe92082f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/3f25361bfe92082f","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497761095,"stop":1742497761215,"duration":120}},{"uid":"fb48bdb35c3e0a30","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/fb48bdb35c3e0a30","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497569573,"stop":1742497569694,"duration":121}}]},"tags":[]},"source":"86f69668bb8254a3.json","parameterValues":["PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68","401"]}