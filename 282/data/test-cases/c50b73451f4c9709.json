{"uid":"c50b73451f4c9709","name":"Update Patient (upi)-Update-Successful","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-Update-Successful","historyId":"110708b8a05cccab34f6555d595d7675:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1743186221453,"stop":1743186221591,"duration":138},"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response has status code 200","time":{"start":1743186221587,"stop":1743186221587,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:344)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient update was successful","time":{"start":1743186221587,"stop":1743186221587,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:344)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient data structure is valid","time":{"start":1743186221588,"stop":1743186221588,"duration":0},"status":"failed","statusMessage":"expected undefined to be an object","statusTrace":"AssertionError: expected undefined to be an object\n   at Object.eval sandbox-script.js:3:344)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Allergies data structure is valid","time":{"start":1743186221588,"stop":1743186221588,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'allergies')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'allergies')\n   at Object.eval sandbox-script.js:4:344)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"73f94040126a0ae8","name":"TestScript","source":"73f94040126a0ae8.txt","type":"text/plain","size":1571},{"uid":"d582a464ff4242d","name":"Request Headers","source":"d582a464ff4242d.json","type":"application/json","size":397},{"uid":"2b762a3eb86ee583","name":"Request Body","source":"2b762a3eb86ee583.txt","type":"text/plain","size":899},{"uid":"295c0a4a75deca31","name":"Response Headers","source":"295c0a4a75deca31.json","type":"application/json","size":354},{"uid":"42199ad37df3d911","name":"Response Body","source":"42199ad37df3d911.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1370-358"},{"name":"thread","value":"pid-2467-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":249,"unknown":0,"total":281},"items":[{"uid":"8ea13f3f0a4ad247","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/281//#testresult/8ea13f3f0a4ad247","status":"passed","time":{"start":1743183931527,"stop":1743183931723,"duration":196}},{"uid":"fb1c1ae4d3c17e3b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/280//#testresult/fb1c1ae4d3c17e3b","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1743099331692,"stop":1743099331880,"duration":188}},{"uid":"cfcf63d2dd8f7888","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/279//#testresult/cfcf63d2dd8f7888","status":"passed","time":{"start":1742894282440,"stop":1742894282702,"duration":262}},{"uid":"8f0cbf22ccebc19f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/278//#testresult/8f0cbf22ccebc19f","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1742760673365,"stop":1742760673480,"duration":115}},{"uid":"62551209fd8050e6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/277//#testresult/62551209fd8050e6","status":"passed","time":{"start":1742584237640,"stop":1742584237896,"duration":256}},{"uid":"12a815211af03c0c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/276//#testresult/12a815211af03c0c","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1742581220006,"stop":1742581220146,"duration":140}},{"uid":"9bfc3577029cc0ce","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/275//#testresult/9bfc3577029cc0ce","status":"passed","time":{"start":1742571571027,"stop":1742571571256,"duration":229}},{"uid":"3ee36158af451aa3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/274//#testresult/3ee36158af451aa3","status":"passed","time":{"start":1742506665777,"stop":1742506665968,"duration":191}},{"uid":"4be2c7f1cb71f143","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/273//#testresult/4be2c7f1cb71f143","status":"passed","time":{"start":1742499799243,"stop":1742499799431,"duration":188}},{"uid":"f2a47649fe661505","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/272//#testresult/f2a47649fe661505","status":"passed","time":{"start":1742499273198,"stop":1742499273464,"duration":266}},{"uid":"df94d51b3e7b38d9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/271//#testresult/df94d51b3e7b38d9","status":"passed","time":{"start":1742499068201,"stop":1742499068414,"duration":213}},{"uid":"91abdf594595ba10","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/270//#testresult/91abdf594595ba10","status":"passed","time":{"start":1742498880548,"stop":1742498880759,"duration":211}},{"uid":"c75fdeb4c9eb6936","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/c75fdeb4c9eb6936","status":"passed","time":{"start":1742498687777,"stop":1742498687981,"duration":204}},{"uid":"659d7effdd407d39","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/659d7effdd407d39","status":"passed","time":{"start":1742498309776,"stop":1742498309968,"duration":192}},{"uid":"856a8ef9fdc4741b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/856a8ef9fdc4741b","status":"passed","time":{"start":1742498152523,"stop":1742498152781,"duration":258}},{"uid":"dfdb601d41bc24bc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/dfdb601d41bc24bc","status":"passed","time":{"start":1742497955515,"stop":1742497955772,"duration":257}},{"uid":"2c49a065ff547916","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/2c49a065ff547916","status":"passed","time":{"start":1742497748291,"stop":1742497748478,"duration":187}},{"uid":"2ccd6e3b60ec1692","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/2ccd6e3b60ec1692","status":"passed","time":{"start":1742497545557,"stop":1742497545755,"duration":198}},{"uid":"aa2aa36c64f1be61","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/aa2aa36c64f1be61","status":"passed","time":{"start":1742497350622,"stop":1742497350821,"duration":199}},{"uid":"2ecc92eba67d82df","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/262//#testresult/2ecc92eba67d82df","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1742494509495,"stop":1742494509618,"duration":123}}]},"tags":[]},"source":"c50b73451f4c9709.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}