{"uid":"b95edabba5961f87","name":"Add result-Notes-Required","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation/Investigation#Add result-Notes-Required","historyId":"bc5dc908a79ef175983a7e761a06df52:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742497961054,"stop":1742497961249,"duration":195},"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1742497961246,"stop":1742497961246,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:614)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is failed","time":{"start":1742497961246,"stop":1742497961247,"duration":1},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:614)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error is an array and not empty","time":{"start":1742497961247,"stop":1742497961247,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:614)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"An error message is displayed","time":{"start":1742497961247,"stop":1742497961247,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:614)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"37bd7edbd4c1d7f2","name":"TestScript","source":"37bd7edbd4c1d7f2.txt","type":"text/plain","size":497},{"uid":"d901c24ef14ffdd7","name":"Request Headers","source":"d901c24ef14ffdd7.json","type":"application/json","size":398},{"uid":"14358bab750c77d3","name":"Request Body","source":"14358bab750c77d3.txt","type":"text/plain","size":348},{"uid":"d966a31fa1b3a720","name":"Response Headers","source":"d966a31fa1b3a720.json","type":"application/json","size":354},{"uid":"f850b86f7062cf66","name":"Response Body","source":"f850b86f7062cf66.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1983-425"},{"name":"thread","value":"pid-2405-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation > Investigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"e4159a8a0e1ab538","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/e4159a8a0e1ab538","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","time":{"start":1742497758909,"stop":1742497759027,"duration":118}},{"uid":"9278a22d93b1a4c7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/9278a22d93b1a4c7","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","time":{"start":1742497567332,"stop":1742497567454,"duration":122}},{"uid":"b0cfb6a2971344ae","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/b0cfb6a2971344ae","status":"failed","statusDetails":"Response code is 400, Status is failed, Error is an array and not empty, An error message is displayed","time":{"start":1742494378354,"stop":1742494378473,"duration":119}}]},"tags":[]},"source":"b95edabba5961f87.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}