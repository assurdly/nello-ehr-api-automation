{"uid":"65d13c6e095a982c","name":"Add result-Unique-TestName","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation/Post Result#Add result-Unique-TestName","historyId":"362daec0b1b8d2629140208d4f362ff1:3787ae57a44d63bbac712b296c32a81b","time":{"start":1742491926182,"stop":1742491926301,"duration":119},"status":"failed","statusMessage":"Response status code is 400, testName must be unique","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, testName must be unique","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1742491926300,"stop":1742491926300,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:551)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"testName must be unique","time":{"start":1742491926300,"stop":1742491926300,"duration":0},"status":"failed","statusMessage":"expected 'Token is not valid' to deeply equal 'A result with this encounterUuid and …'","statusTrace":"AssertionError: expected 'Token is not valid' to deeply equal 'A result with this encounterUuid and …'\n   at Object.eval sandbox-script.js:2:551)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6446414b86e44ad2","name":"TestScript","source":"6446414b86e44ad2.txt","type":"text/plain","size":418},{"uid":"8b3eb1770d9f8129","name":"Request Headers","source":"8b3eb1770d9f8129.json","type":"application/json","size":395},{"uid":"91cf364f5fca40ca","name":"Request Body","source":"91cf364f5fca40ca.txt","type":"text/plain","size":432},{"uid":"dae1ff4a95ead294","name":"Response Headers","source":"dae1ff4a95ead294.json","type":"application/json","size":354},{"uid":"6cf608b1179ba8e8","name":"Response Body","source":"6cf608b1179ba8e8.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1315-66"},{"name":"thread","value":"pid-2409-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation > Post Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"61c34d401ce02526","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/247//#testresult/61c34d401ce02526","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742491778846,"stop":1742491779033,"duration":187}},{"uid":"4430471bc040f231","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/246//#testresult/4430471bc040f231","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742491534249,"stop":1742491534366,"duration":117}},{"uid":"b96190dee48f4c3b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/245//#testresult/b96190dee48f4c3b","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742491193679,"stop":1742491193839,"duration":160}},{"uid":"ed2117ac935aba91","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/244//#testresult/ed2117ac935aba91","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490974556,"stop":1742490974673,"duration":117}},{"uid":"3b3aefd772bd6ac4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/243//#testresult/3b3aefd772bd6ac4","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490810301,"stop":1742490810779,"duration":478}},{"uid":"51524a0060368013","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/242//#testresult/51524a0060368013","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490601089,"stop":1742490601211,"duration":122}},{"uid":"8f47615306103905","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/241//#testresult/8f47615306103905","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490465017,"stop":1742490465193,"duration":176}},{"uid":"752989886d9c51e3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/240//#testresult/752989886d9c51e3","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490221143,"stop":1742490221265,"duration":122}},{"uid":"85c39c75ad00b5b5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/239//#testresult/85c39c75ad00b5b5","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742490033217,"stop":1742490033338,"duration":121}},{"uid":"32bf45a1cdc82f41","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/238//#testresult/32bf45a1cdc82f41","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742489517801,"stop":1742489517986,"duration":185}},{"uid":"631e2412c273cbfd","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/237//#testresult/631e2412c273cbfd","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742489287636,"stop":1742489287759,"duration":123}},{"uid":"7366305d40ae7814","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/236//#testresult/7366305d40ae7814","status":"failed","statusDetails":"Response status code is 400, testName must be unique","time":{"start":1742489094415,"stop":1742489094534,"duration":119}}]},"tags":[]},"source":"65d13c6e095a982c.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}