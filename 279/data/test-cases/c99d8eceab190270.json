{"uid":"c99d8eceab190270","name":"Fetch All Encounter","fullName":"FamaEMR - Test pack/RADIOLOGIST/Encounter/Fetch ALL Encounter#Fetch All Encounter","historyId":"c663c6820a2c791e5f96517d32292993:6e83ba3d2c330d9c85972f382f1ea7b4","time":{"start":1742894506217,"stop":1742894506402,"duration":185},"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 200","time":{"start":1742894506399,"stop":1742894506399,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1742894506400,"stop":1742894506400,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Encounters list is not empty","time":{"start":1742894506400,"stop":1742894506400,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each encounter contains required fields","time":{"start":1742894506401,"stop":1742894506401,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:4:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check payment policy is either 'cash' or 'claims'","time":{"start":1742894506401,"stop":1742894506401,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:541)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dad3fc5aeca3a1fb","name":"TestScript","source":"dad3fc5aeca3a1fb.txt","type":"text/plain","size":1297},{"uid":"8dae86b01ef8f65f","name":"Request Headers","source":"8dae86b01ef8f65f.json","type":"application/json","size":326},{"uid":"fb1fa6863a646a10","name":"Response Headers","source":"fb1fa6863a646a10.json","type":"application/json","size":354},{"uid":"7861919270791b1a","name":"Response Body","source":"7861919270791b1a.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1913-296"},{"name":"thread","value":"pid-2350-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Encounter > Fetch ALL Encounter"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/encounter/fetch-all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":113,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":124},"items":[{"uid":"3511aa33450c01ec","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/277//#testresult/3511aa33450c01ec","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742584466333,"stop":1742584466501,"duration":168}},{"uid":"75710864c2ce0ea9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/275//#testresult/75710864c2ce0ea9","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742571787234,"stop":1742571787373,"duration":139}},{"uid":"fd9bada387b28454","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/274//#testresult/fd9bada387b28454","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742506868077,"stop":1742506868199,"duration":122}},{"uid":"f25d56bd5eb3b7c0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/273//#testresult/f25d56bd5eb3b7c0","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742499999895,"stop":1742500000014,"duration":119}},{"uid":"68c274617b18c37e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/272//#testresult/68c274617b18c37e","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742499497842,"stop":1742499498029,"duration":187}},{"uid":"2dac54762ee1f4fa","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/271//#testresult/2dac54762ee1f4fa","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742499279573,"stop":1742499279710,"duration":137}},{"uid":"9681cfb6763f4e7f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/270//#testresult/9681cfb6763f4e7f","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742499093837,"stop":1742499093974,"duration":137}},{"uid":"3430c4f9d961b329","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/3430c4f9d961b329","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742498896480,"stop":1742498896616,"duration":136}},{"uid":"af5ea92ec6cf7374","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/af5ea92ec6cf7374","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742498511336,"stop":1742498511453,"duration":117}},{"uid":"1995fe48635105d1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/1995fe48635105d1","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742498381772,"stop":1742498381956,"duration":184}},{"uid":"c93f9802bed29539","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/c93f9802bed29539","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742498185055,"stop":1742498185238,"duration":183}},{"uid":"9a24a0ef4d32c0f6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/9a24a0ef4d32c0f6","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497949303,"stop":1742497949441,"duration":138}},{"uid":"c335da49d34f2943","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/c335da49d34f2943","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497747453,"stop":1742497747575,"duration":122}},{"uid":"f3ed5ca278a2fd78","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/f3ed5ca278a2fd78","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742497553783,"stop":1742497553905,"duration":122}},{"uid":"1adacb3653310f14","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/1adacb3653310f14","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742494363732,"stop":1742494363852,"duration":120}},{"uid":"8e854f6f539137c4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/259//#testresult/8e854f6f539137c4","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742494168913,"stop":1742494169033,"duration":120}},{"uid":"ca05984859264742","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/258//#testresult/ca05984859264742","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493796849,"stop":1742493796969,"duration":120}},{"uid":"ed1abaaabb560c79","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/256//#testresult/ed1abaaabb560c79","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493657095,"stop":1742493657281,"duration":186}},{"uid":"3486d8b115b96ccc","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/255//#testresult/3486d8b115b96ccc","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493414213,"stop":1742493414334,"duration":121}},{"uid":"8e66af4fc774a543","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/254//#testresult/8e66af4fc774a543","status":"failed","statusDetails":"Response status code is 200, Response status is success, Encounters list is not empty, Each encounter contains required fields, Check payment policy is either 'cash' or 'claims'","time":{"start":1742493226477,"stop":1742493226601,"duration":124}}]},"tags":[]},"source":"c99d8eceab190270.json","parameterValues":["GET - https://testback.famacare.com/api/encounter/fetch-all","401"]}