var jsonData = pm.response.json();

pm.test("Response status code is not 200", function () {
    pm.response.to.not.have.status(200);
});

pm.test("Response contains error details", function () {
    pm.expect(jsonData.status).to.eql("failed");
    pm.expect(jsonData.error).to.be.an("array").that.is.not.empty;
});

pm.test("Error structure is valid", function () {
    jsonData.error.forEach(function (err) {
        pm.expect(err).to.have.property("type").that.is.a("string");
        pm.expect(err).to.have.property("value").that.is.a("string");
        pm.expect(err).to.have.property("msg").that.is.a("string");
        pm.expect(err).to.have.property("path").that.is.a("string");
        pm.expect(err).to.have.property("location").that.is.a("string");
    });
});

pm.test("Error messages are correct", function () {
    var errorMessages = jsonData.error.map(e => e.msg);
    pm.expect(errorMessages).to.include("biller must be a valid email");
    pm.expect(errorMessages).to.include("biller is required");
});
