{"uid":"f6260f1dbea7b0e1","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1742760673483,"stop":1742760673598,"duration":115},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1742760673595,"stop":1742760673595,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742760673595,"stop":1742760673595,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1742760673596,"stop":1742760673596,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1742760673596,"stop":1742760673596,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1742760673596,"stop":1742760673596,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"afca78029bd8f725","name":"TestScript","source":"afca78029bd8f725.txt","type":"text/plain","size":1231},{"uid":"4925e5a71777ac4b","name":"Request Headers","source":"4925e5a71777ac4b.json","type":"application/json","size":397},{"uid":"556cef58ebf8fa9a","name":"Request Body","source":"556cef58ebf8fa9a.txt","type":"text/plain","size":686},{"uid":"889f5f589f2df522","name":"Response Headers","source":"889f5f589f2df522.json","type":"application/json","size":354},{"uid":"ec0d4832241a9b36","name":"Response Body","source":"ec0d4832241a9b36.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1068-63"},{"name":"thread","value":"pid-2393-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":247,"unknown":0,"total":277},"items":[{"uid":"43832092598390ae","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/277//#testresult/43832092598390ae","status":"passed","time":{"start":1742584237899,"stop":1742584238081,"duration":182}},{"uid":"e7c743cf50861a2c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/276//#testresult/e7c743cf50861a2c","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1742581220148,"stop":1742581220290,"duration":142}},{"uid":"41a3aa2ae57aa7db","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/275//#testresult/41a3aa2ae57aa7db","status":"passed","time":{"start":1742571571259,"stop":1742571571407,"duration":148}},{"uid":"36b925ec5a686362","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/274//#testresult/36b925ec5a686362","status":"passed","time":{"start":1742506665971,"stop":1742506666102,"duration":131}},{"uid":"1d5973cd3fabf3b3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/273//#testresult/1d5973cd3fabf3b3","status":"passed","time":{"start":1742499799434,"stop":1742499799561,"duration":127}},{"uid":"620082fef99aac22","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/272//#testresult/620082fef99aac22","status":"passed","time":{"start":1742499273467,"stop":1742499273664,"duration":197}},{"uid":"8f3e10e49b4a6c26","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/271//#testresult/8f3e10e49b4a6c26","status":"passed","time":{"start":1742499068416,"stop":1742499069743,"duration":1327}},{"uid":"6af626b17be9074c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/270//#testresult/6af626b17be9074c","status":"passed","time":{"start":1742498880762,"stop":1742498880908,"duration":146}},{"uid":"f8561f20357088e5","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/f8561f20357088e5","status":"passed","time":{"start":1742498687983,"stop":1742498688132,"duration":149}},{"uid":"87265e44feed7e11","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/87265e44feed7e11","status":"passed","time":{"start":1742498309971,"stop":1742498310103,"duration":132}},{"uid":"9f9fc14dc266581","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/9f9fc14dc266581","status":"passed","time":{"start":1742498152783,"stop":1742498152984,"duration":201}},{"uid":"f0715af68476f89d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/f0715af68476f89d","status":"passed","time":{"start":1742497955774,"stop":1742497956014,"duration":240}},{"uid":"3027c13885099833","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/3027c13885099833","status":"passed","time":{"start":1742497748481,"stop":1742497748608,"duration":127}},{"uid":"8243f0e726237f8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/8243f0e726237f8","status":"passed","time":{"start":1742497545757,"stop":1742497545890,"duration":133}},{"uid":"9ce8527a8853d91a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/9ce8527a8853d91a","status":"passed","time":{"start":1742497350824,"stop":1742497350958,"duration":134}},{"uid":"8f6c341dfffd01a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/262//#testresult/8f6c341dfffd01a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1742494509620,"stop":1742494509743,"duration":123}},{"uid":"164f66baf6963bf4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/260//#testresult/164f66baf6963bf4","status":"passed","time":{"start":1742494161066,"stop":1742494161199,"duration":133}},{"uid":"65c94bee207922df","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/259//#testresult/65c94bee207922df","status":"passed","time":{"start":1742493962804,"stop":1742493962935,"duration":131}},{"uid":"4842aaaaed906aa7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/258//#testresult/4842aaaaed906aa7","status":"passed","time":{"start":1742493590926,"stop":1742493591055,"duration":129}},{"uid":"ac68295fe18e715d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/256//#testresult/ac68295fe18e715d","status":"passed","time":{"start":1742493421867,"stop":1742493422184,"duration":317}}]},"tags":[]},"source":"f6260f1dbea7b0e1.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}