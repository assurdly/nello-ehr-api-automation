{"uid":"5b84c5ad224b7033","name":"Create-Service-NotPermitted","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Services/Service-Create#Create-Service-NotPermitted","historyId":"5392848acd82964c669f3a865c0af88c:92279dc9005c0a0bf524e8f312581659","time":{"start":1742045123751,"stop":1742045123935,"duration":184},"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 403 (Forbidden), Error message is correct, User object is present and has required fields, User role is not Admin or Receptionist","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 403 (Forbidden)","time":{"start":1742045123932,"stop":1742045123932,"duration":0},"status":"failed","statusMessage":"expected response to have status code 403 but got 401","statusTrace":"AssertionError: expected response to have status code 403 but got 401\n   at Object.eval sandbox-script.js:1:571)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1742045123933,"stop":1742045123933,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'message' of 'Access denied: Admins and Receptionis…', but got 'Token is not valid'\n   at Object.eval sandbox-script.js:2:571)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"User object is present and has required fields","time":{"start":1742045123933,"stop":1742045123933,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token is not valid' } to have property 'user'","statusTrace":"AssertionError: expected { message: 'Token is not valid' } to have property 'user'\n   at Object.eval sandbox-script.js:3:571)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"User role is not Admin or Receptionist","time":{"start":1742045123933,"stop":1742045123933,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'role')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'role')\n   at Object.eval sandbox-script.js:4:571)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bc200831a5f88418","name":"TestScript","source":"bc200831a5f88418.txt","type":"text/plain","size":952},{"uid":"99b35f1d4b3f1394","name":"Request Headers","source":"99b35f1d4b3f1394.json","type":"application/json","size":395},{"uid":"e53695392380d5e7","name":"Request Body","source":"e53695392380d5e7.txt","type":"text/plain","size":137},{"uid":"627591e2b0b9dfd0","name":"Response Headers","source":"627591e2b0b9dfd0.json","type":"application/json","size":354},{"uid":"5dc75414ff6ea101","name":"Response Body","source":"5dc75414ff6ea101.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1940-392"},{"name":"thread","value":"pid-2360-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Services > Service-Create"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/service/addservice"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":19},"items":[{"uid":"9161cea0ef3e3902","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/167//#testresult/9161cea0ef3e3902","status":"passed","time":{"start":1742044989189,"stop":1742044989328,"duration":139}},{"uid":"38f894f20e8fa72a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/166//#testresult/38f894f20e8fa72a","status":"passed","time":{"start":1742044711500,"stop":1742044711700,"duration":200}},{"uid":"868ffa97f4222b8f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/868ffa97f4222b8f","status":"passed","time":{"start":1742044533348,"stop":1742044533468,"duration":120}},{"uid":"3a3d92cb5337e0c8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/3a3d92cb5337e0c8","status":"passed","time":{"start":1742044368921,"stop":1742044369063,"duration":142}},{"uid":"fdf986960e78609c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/fdf986960e78609c","status":"passed","time":{"start":1742044162017,"stop":1742044162137,"duration":120}},{"uid":"ac6a172d46cd184c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/ac6a172d46cd184c","status":"passed","time":{"start":1742043974652,"stop":1742043975009,"duration":357}},{"uid":"beddc1eb0f351814","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/beddc1eb0f351814","status":"passed","time":{"start":1742043846010,"stop":1742043846196,"duration":186}},{"uid":"bba992b56f2c9978","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/bba992b56f2c9978","status":"passed","time":{"start":1742043652512,"stop":1742043652675,"duration":163}},{"uid":"4edabc83dac03682","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/159//#testresult/4edabc83dac03682","status":"passed","time":{"start":1742043439322,"stop":1742043439442,"duration":120}},{"uid":"4e07e99baf326578","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/158//#testresult/4e07e99baf326578","status":"passed","time":{"start":1742043256812,"stop":1742043256932,"duration":120}},{"uid":"27c59fa7b6f073d4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/157//#testresult/27c59fa7b6f073d4","status":"passed","time":{"start":1742043071599,"stop":1742043071721,"duration":122}},{"uid":"806496e0f9fa51c7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/156//#testresult/806496e0f9fa51c7","status":"passed","time":{"start":1742042884803,"stop":1742042884922,"duration":119}},{"uid":"79d20773e746a34d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/155//#testresult/79d20773e746a34d","status":"passed","time":{"start":1742042571324,"stop":1742042571509,"duration":185}},{"uid":"727ade6d74f6791a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/154//#testresult/727ade6d74f6791a","status":"passed","time":{"start":1742042410584,"stop":1742042410722,"duration":138}},{"uid":"e10637c7b31c994e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/153//#testresult/e10637c7b31c994e","status":"passed","time":{"start":1742042169753,"stop":1742042169892,"duration":139}},{"uid":"a7c2df3b69aedbd7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/152//#testresult/a7c2df3b69aedbd7","status":"passed","time":{"start":1742041986264,"stop":1742041986386,"duration":122}},{"uid":"f6e8c50f99ebad2b","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/151//#testresult/f6e8c50f99ebad2b","status":"passed","time":{"start":1742041819804,"stop":1742041819924,"duration":120}},{"uid":"bff5207d053be11d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/149//#testresult/bff5207d053be11d","status":"passed","time":{"start":1741957284257,"stop":1741957284444,"duration":187}}]},"tags":[]},"source":"5b84c5ad224b7033.json","parameterValues":["POST - https://testback.famacare.com/api/service/addservice","401"]}