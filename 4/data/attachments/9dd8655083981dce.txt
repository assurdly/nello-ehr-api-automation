var jsonData = pm.response.json();

pm.test("Response code is 200", () => {
    pm.response.to.have.status(200);
});

pm.test("Patients data is valid", () => {
    pm.expect(jsonData.status).to.eql("success");
    pm.expect(jsonData.patients).to.be.an("array").and.to.have.length.above(0);

    pm.expect(jsonData.patients[0]._id).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].upi).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].blood_group).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].next_of_kin).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].office).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].office_uuid).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].uuid).to.be.a("string").and.to.not.be.null;
    pm.expect(jsonData.patients[0].allergies).to.be.an("object").and.to.not.be.null;
});
