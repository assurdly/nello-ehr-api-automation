{"uid":"becaf38035efa86b","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1742155849200,"stop":1742155849320,"duration":120},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1742155849317,"stop":1742155849317,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1742155849317,"stop":1742155849317,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1742155849318,"stop":1742155849318,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1742155849318,"stop":1742155849318,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1742155849319,"stop":1742155849319,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:345)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"17a967cdfb7f91a4","name":"TestScript","source":"17a967cdfb7f91a4.txt","type":"text/plain","size":1231},{"uid":"48efcb45efc6299c","name":"Request Headers","source":"48efcb45efc6299c.json","type":"application/json","size":397},{"uid":"4b2db5882e884615","name":"Request Body","source":"4b2db5882e884615.txt","type":"text/plain","size":686},{"uid":"af4dc9c34167e100","name":"Response Headers","source":"af4dc9c34167e100.json","type":"application/json","size":354},{"uid":"f143252b074a7cbc","name":"Response Body","source":"f143252b074a7cbc.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az810-976"},{"name":"thread","value":"pid-2381-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":0,"skipped":0,"passed":154,"unknown":0,"total":181},"items":[{"uid":"719357629bd86927","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/179//#testresult/719357629bd86927","status":"passed","time":{"start":1742062777062,"stop":1742062777256,"duration":194}},{"uid":"181bee8cea9c6684","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/178//#testresult/181bee8cea9c6684","status":"passed","time":{"start":1742062552864,"stop":1742062553130,"duration":266}},{"uid":"47f2a4ecfaca3f1a","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/177//#testresult/47f2a4ecfaca3f1a","status":"passed","time":{"start":1742062370582,"stop":1742062370725,"duration":143}},{"uid":"462e95104bb8ce16","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/176//#testresult/462e95104bb8ce16","status":"passed","time":{"start":1742046156234,"stop":1742046156362,"duration":128}},{"uid":"150bbeaabc8ba202","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/175//#testresult/150bbeaabc8ba202","status":"passed","time":{"start":1742045975560,"stop":1742045975703,"duration":143}},{"uid":"b3f5902ce7dd5ec4","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/174//#testresult/b3f5902ce7dd5ec4","status":"passed","time":{"start":1742045792219,"stop":1742045792362,"duration":143}},{"uid":"137ee5c3dcfdadaa","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/173//#testresult/137ee5c3dcfdadaa","status":"passed","time":{"start":1742045610594,"stop":1742045610723,"duration":129}},{"uid":"9d37805d03016e5d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/172//#testresult/9d37805d03016e5d","status":"passed","time":{"start":1742045433436,"stop":1742045433581,"duration":145}},{"uid":"ee715a19da71dd01","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/171//#testresult/ee715a19da71dd01","status":"passed","time":{"start":1742045242429,"stop":1742045242560,"duration":131}},{"uid":"b9a96ed00d7a3f9d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/170//#testresult/b9a96ed00d7a3f9d","status":"passed","time":{"start":1742045058581,"stop":1742045058708,"duration":127}},{"uid":"e67a12f8b189e6ba","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/169//#testresult/e67a12f8b189e6ba","status":"passed","time":{"start":1742044901318,"stop":1742044901491,"duration":173}},{"uid":"50dbeee8274a40a6","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/168//#testresult/50dbeee8274a40a6","status":"passed","time":{"start":1742044718251,"stop":1742044718444,"duration":193}},{"uid":"e8dd30bee3a903f8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/167//#testresult/e8dd30bee3a903f8","status":"passed","time":{"start":1742044530923,"stop":1742044531071,"duration":148}},{"uid":"abcd8fb619168f24","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/166//#testresult/abcd8fb619168f24","status":"passed","time":{"start":1742044327051,"stop":1742044327181,"duration":130}},{"uid":"1c22473333aee316","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/165//#testresult/1c22473333aee316","status":"passed","time":{"start":1742044151902,"stop":1742044152031,"duration":129}},{"uid":"8e02efecf97c58c0","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/164//#testresult/8e02efecf97c58c0","status":"passed","time":{"start":1742043978064,"stop":1742043978211,"duration":147}},{"uid":"17f7e584e3631a31","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/163//#testresult/17f7e584e3631a31","status":"passed","time":{"start":1742043779006,"stop":1742043779131,"duration":125}},{"uid":"1c1da1dae256d35f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/162//#testresult/1c1da1dae256d35f","status":"passed","time":{"start":1742043593548,"stop":1742043593674,"duration":126}},{"uid":"c74b91608fcc7feb","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/161//#testresult/c74b91608fcc7feb","status":"passed","time":{"start":1742043437344,"stop":1742043437539,"duration":195}},{"uid":"f5baef89b12ff67d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/160//#testresult/f5baef89b12ff67d","status":"passed","time":{"start":1742043252356,"stop":1742043252526,"duration":170}}]},"tags":[]},"source":"becaf38035efa86b.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}