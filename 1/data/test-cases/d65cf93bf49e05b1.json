{"uid":"d65cf93bf49e05b1","name":"Fetch Service by type-InvalidServiceType","fullName":"FamaEMR - Test pack/RECEPTIONIST/Services/fetch all services by type#Fetch Service by type-InvalidServiceType","historyId":"d6b310b2cc2a258387f09ae501b00637:af7881475aee97fc00b684ea48d8af78","time":{"start":1739902590866,"stop":1739902591049,"duration":183},"status":"failed","statusMessage":"Response status code is 400, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739902591047,"stop":1739902591047,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:422)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1739902591048,"stop":1739902591048,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:422)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d93feaea5d9144a9","name":"TestScript","source":"d93feaea5d9144a9.txt","type":"text/plain","size":357},{"uid":"4c52438fc8819e50","name":"Request Headers","source":"4c52438fc8819e50.json","type":"application/json","size":328},{"uid":"fd4361a50f3de302","name":"Response Headers","source":"fd4361a50f3de302.json","type":"application/json","size":354},{"uid":"a4c016366c5ade37","name":"Response Body","source":"a4c016366c5ade37.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1680-118"},{"name":"thread","value":"pid-2388-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Services > fetch all services by type"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/service/fetch/Imcccc"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d65cf93bf49e05b1.json","parameterValues":["GET - https://testback.famacare.com/api/service/fetch/Imcccc","401"]}