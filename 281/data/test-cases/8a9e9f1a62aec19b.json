{"uid":"8a9e9f1a62aec19b","name":"Update Result-TestName-Required","fullName":"FamaEMR - Test pack/LAB TECHNICIAN/Investigation/Update Result#Update Result-TestName-Required","historyId":"f67e27651c6d6d3ac1083334dd0bfe08:0d31515477a5c0b947215b9cc328ebab","time":{"start":1743184320168,"stop":1743184320290,"duration":122},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1743184320287,"stop":1743184320287,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1743184320288,"stop":1743184320288,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1743184320288,"stop":1743184320288,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1743184320288,"stop":1743184320288,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:632)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"302bc3e473f3e27a","name":"TestScript","source":"302bc3e473f3e27a.txt","type":"text/plain","size":496},{"uid":"c0a7f20523f231cb","name":"Request Headers","source":"c0a7f20523f231cb.json","type":"application/json","size":398},{"uid":"e278384cff321ef0","name":"Request Body","source":"e278384cff321ef0.txt","type":"text/plain","size":447},{"uid":"fabde05ea565e965","name":"Response Headers","source":"fabde05ea565e965.json","type":"application/json","size":354},{"uid":"14f04f48166520e8","name":"Response Body","source":"14f04f48166520e8.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1779-990"},{"name":"thread","value":"pid-2337-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"LAB TECHNICIAN"},{"name":"subSuite","value":"Investigation > Update Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"a311622b741b3394","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/279//#testresult/a311622b741b3394","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742894525447,"stop":1742894525632,"duration":185}},{"uid":"f9e69c5b9d6229a1","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/277//#testresult/f9e69c5b9d6229a1","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742584483861,"stop":1742584484030,"duration":169}},{"uid":"8811b02e71057405","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/275//#testresult/8811b02e71057405","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742571804324,"stop":1742571804464,"duration":140}},{"uid":"104459f039d7b98e","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/274//#testresult/104459f039d7b98e","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742506881386,"stop":1742506881507,"duration":121}},{"uid":"15bf12f9b0998e60","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/273//#testresult/15bf12f9b0998e60","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742500012950,"stop":1742500013068,"duration":118}},{"uid":"228e469ad2362101","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/272//#testresult/228e469ad2362101","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742499517023,"stop":1742499517216,"duration":193}},{"uid":"7cc0a51069f1f0c","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/271//#testresult/7cc0a51069f1f0c","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742499295242,"stop":1742499295381,"duration":139}},{"uid":"86f69668bb8254a3","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/270//#testresult/86f69668bb8254a3","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742499110570,"stop":1742499110706,"duration":136}},{"uid":"103542a435501eb8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/269//#testresult/103542a435501eb8","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498915368,"stop":1742498915502,"duration":134}},{"uid":"f47aaeca1a79aa19","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/268//#testresult/f47aaeca1a79aa19","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498524627,"stop":1742498524743,"duration":116}},{"uid":"e609988d3485b51d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/267//#testresult/e609988d3485b51d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498400833,"stop":1742498401017,"duration":184}},{"uid":"aa8bd6873787fed2","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/266//#testresult/aa8bd6873787fed2","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742498205122,"stop":1742498205308,"duration":186}},{"uid":"8c59734cdae18681","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/265//#testresult/8c59734cdae18681","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497963248,"stop":1742497963362,"duration":114}},{"uid":"3f25361bfe92082f","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/264//#testresult/3f25361bfe92082f","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497761095,"stop":1742497761215,"duration":120}},{"uid":"fb48bdb35c3e0a30","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/263//#testresult/fb48bdb35c3e0a30","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742497569573,"stop":1742497569694,"duration":121}}]},"tags":[]},"source":"8a9e9f1a62aec19b.json","parameterValues":["PUT - https://testback.famacare.com/api/result/edit/unique/67dc495c2045b07e4db94e68","401"]}