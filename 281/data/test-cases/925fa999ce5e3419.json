{"uid":"925fa999ce5e3419","name":"Add result-TestName-Required","fullName":"FamaEMR - Test pack/RADIOLOGIST/Investigation/Add Result#Add result-TestName-Required","historyId":"f6598371b7b199c5a748e55c69582a62:3787ae57a44d63bbac712b296c32a81b","time":{"start":1743184249237,"stop":1743184249360,"duration":123},"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1743184249357,"stop":1743184249357,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1743184249357,"stop":1743184249357,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1743184249358,"stop":1743184249358,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error path is correct","time":{"start":1743184249358,"stop":1743184249358,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:4:547)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d39834b394581403","name":"TestScript","source":"d39834b394581403.txt","type":"text/plain","size":496},{"uid":"b39818d9bed9a6d7","name":"Request Headers","source":"b39818d9bed9a6d7.json","type":"application/json","size":395},{"uid":"f908e821d9d41b88","name":"Request Body","source":"f908e821d9d41b88.txt","type":"text/plain","size":418},{"uid":"2883764b00c17e55","name":"Response Headers","source":"2883764b00c17e55.json","type":"application/json","size":354},{"uid":"2dd7cc8df8f45ee6","name":"Response Body","source":"2dd7cc8df8f45ee6.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1779-990"},{"name":"thread","value":"pid-2337-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RADIOLOGIST"},{"name":"subSuite","value":"Investigation > Add Result"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://testback.famacare.com/api/result/add-result"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"4c6d723f12f1692d","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/279//#testresult/4c6d723f12f1692d","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742894507338,"stop":1742894507525,"duration":187}},{"uid":"fbfc71a82aa8e5c7","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/277//#testresult/fbfc71a82aa8e5c7","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742584467346,"stop":1742584467514,"duration":168}},{"uid":"e1a8b06525d22ba9","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/275//#testresult/e1a8b06525d22ba9","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742571788082,"stop":1742571788221,"duration":139}},{"uid":"80beb1217c20dcc8","reportUrl":"https://assurdly.github.io/nello-ehr-api-automation/274//#testresult/80beb1217c20dcc8","status":"failed","statusDetails":"Response code is 400, Response status is failed, Error message is correct, Error path is correct","time":{"start":1742506868810,"stop":1742506868932,"duration":122}}]},"tags":[]},"source":"925fa999ce5e3419.json","parameterValues":["POST - https://testback.famacare.com/api/result/add-result","401"]}